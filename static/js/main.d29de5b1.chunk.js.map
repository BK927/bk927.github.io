{"version":3,"sources":["asset/style/style.js","components/ShowcaseCard.js","pages/Home.js","pages/Portfolio.js","components/ButtonToAction.js","components/ChracterMaker/FacetChart.js","util/BigFiveStandard.js","components/ChracterMaker/PersonalityDetail.js","pages/CharacterMaker.js","components/KakaoContent.js","util/LocalStorageCacher.js","util/KakaoChattingAnalyser.js","util/generateHash.js","components/kakao_contents/Description.js","util/generateChartColor.js","components/kakao_contents/BarChart.js","components/kakao_contents/Ranking.js","components/kakao_contents/InnnerGrid.js","pages/KakaoAnalyser.js","components/Menu.js","App.js","Root.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","Container","borderRadius","maxWidth","minWidth","marginTop","spacing","marginBottom","marginLeft","marginRight","padding","loadingCircle","display","btaBox","textAlign","width","justifyContent","flexDirection","height","margin","overflow","alignItems","fontSize","transition","contentBox","position","boxSizing","backgroundColor","palette","background","dp02","innerGrid","flexBasis","gap","alignContent","dp03","flex","link","color","secondary","main","textDecoration","fontWeight","light","transitions","create","duration","complex","easing","easeOut","uploadButton","primary","text","cardTitle","typography","pxToRem","cardPost","cardGrid","gridTemplateColumns","chartContainer","rankingList","listStyleType","whiteSpace","dp08","ShowcaseCard","props","classes","Card","CardContent","Typography","variant","component","title","className","category","body","CardActions","Button","Link","to","size","action","defaultProps","Home","useState","cards","cardsComponent","map","element","index","String","Portfolio","Paper","elevation","ButtonToAction","buttonText","startIcon","inputType","onChange","onClick","Box","accept","style","id","type","htmlFor","root","FacetChart","facets","chartData","labels","name","datasets","data","score","borderColor","borderWidth","options","maintainAspectRatio","responsive","indexAxis","scales","x","suggestedMin","suggestedMax","grid","drawBorder","y","plugins","legend","evalBigFiveScore","domainTitle","accHeading","flexShrink","accSecondHeading","facetPanel","dp04","innerPanel","behaviorChip","domainDescription","lineHeight","PersonalityDetail","domain","personBehaviors","domainScore","Math","round","reduce","acc","val","length","korEvalMap","Object","freeze","low","middle","high","domainEval","displayedDomainEval","facetDescriptions","facet","facetEval","displayedEval","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","description","displayedBehaviors","Chip","label","align","split","CharacterMaker","isGenerated","setIsGenerated","BigFive","domains","setDomains","allocStatsToDomain","domainList","forEach","i","j","floor","random","bigFive","item","behavior","KakaoContent","items","CircularProgress","components","setComponents","mounted","useRef","useEffect","current","ref","LocalStorageCacher","md5Hash","hashStr","generateName","cacheData","func","localName","stringfiedData","JSON","stringify","localStorage","setItem","loadFromCache","rawData","getItem","parse","isCacheAvailable","LangEnum","ko","en","jp","KO_DATE_REGEX","KO_NAME_REGEX","KO_CHATTING_AND_NAME_REGEX","KO_PHOTO_REGEX","KO_VIDEO_REGEX","KO_EMOJI_REGEX","YOUTUBE_LINK_REGEX","KakaoChattingAnalyser","content","object","require","hash","cache","script","parsedDates","lang","test","tryToLoadFromCache","args","apply","countMatchToRegex","str","regex","match","calcTypingRanking","chattingArray","rankingMap","Map","nickname","chatting","has","set","get","e","console","error","arrForSort","Array","from","sort","first","second","countDayFrequency","parseToDateArray","dayArray","dayLabel","converToDayLabel","getDay","push","countFrequency","countHourFreqeuncy","hourArray","hourStr","getHours","countNameFrequnecy","nameArray","dateStrArray","dateArray","KO_YEAR_REGEX","KO_MONTH_REGEX","KO_DAY_REGEX","KO_TIME_REGEX","year","parseInt","month","day","timeStrArray","hour","minute","RegExp","Date","arr","getMd5Hash","getLanguage","getScript","calcBeginDate","calcEndDate","datesArray","calcNumOfLines","calcNameFrequency","calcDayFrequency","calcHourFrequency","calcPhotoFrequency","calcVideoFrequency","calcEmojiFrequency","calcYoutubeFrequency","Description","generateChartColor","array","colors","rgb","getRandomInt","max","red","green","blue","toString","generateRandomRGB","BarChart","slice","Ranking","list","sumOfItems","value","largestNum","liTags","percent","textContent","InnnerGrid","cells","cellList","KakaoAnalyser","contents","setContents","uploaded","setUploaded","createDescription","key","createBarChart","createRanking","createInnnerGrid","file","target","files","reader","FileReader","onload","fileContent","result","chattingAnalyser","createNodefunc","calcDataFunc","beginDate","endDate","convertDate","date","getFullYear","getMonth","getDate","numOfLines","gapTime","getTime","gapDay","readAsText","fullList","SwipeableTemporaryDrawer","React","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","clsx","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","Divider","Fragment","SwipeableDrawer","onClose","onOpen","App","defaults","font","tooltip","displayColors","exact","path","href","rel","Root","createMuiTheme","dark","paper","default","dp01","dp05","dp06","dp07","highEmphasis","midiumEmphasis","fontFamily","overrides","MuiCssBaseline","html","WebkitFontSmoothing","footer","ThemeProvider","CssBaseline","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d29de5b1.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    borderRadius: \"10px\",\n    maxWidth: \"1400px\",\n    minWidth: \"30vw\",\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: theme.spacing(4),\n  },\n  loadingCircle: {\n    marginTop: theme.spacing(15),\n    marginBottom: theme.spacing(15),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    \"&&\": {\n      display: \"block\",\n    },\n  },\n  btaBox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"auto\",\n    margin: \"30px auto 30px auto\",\n    overflow: \"auto\",\n    \"& > .MuiTypography-root\": {\n      margin: theme.spacing(7),\n    },\n    \"& > .MuiButton-root\": {\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      margin: \"0 auto\",\n      borderRadius: \"0.25em\",\n      fontSize: \"1.5rem\",\n      transition: \"all 0.3s ease-out\",\n    },\n  },\n  contentBox: {\n    position: \"relative\",\n    display: \"block\",\n    boxSizing: \"content-box\",\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    height: \"max-content\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: theme.spacing(2),\n    \"&&\": {\n      backgroundColor: theme.palette.background.dp02,\n    },\n    \"& h5\": {\n      display: \"block\",\n      marginBottom: theme.spacing(3.5),\n    },\n  },\n  innerGrid: {\n    display: \"flex\",\n    flexBasis: \"0\",\n    gap: theme.spacing(2),\n    alignContent: \"space-between\",\n    \"& > div\": {\n      backgroundColor: theme.palette.background.dp03,\n      borderRadius: \"5px\",\n      padding: \"8px 15px\",\n      flex: \"1\",\n    },\n    \"& > div > h4\": {\n      display: \"block\",\n      marginBottom: \"15px\",\n    },\n  },\n  link: {\n    color: theme.palette.secondary.main,\n    textDecoration: \"none\",\n    fontWeight: \"700\",\n    \"&:hover\": {\n      color: theme.palette.secondary.light,\n    },\n    transition: theme.transitions.create([\"all\"], {\n      duration: theme.transitions.duration.complex,\n      easing: theme.transitions.easing.easeOut,\n    }),\n  },\n  uploadButton: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      padding: theme.spacing(1.6),\n      fontWeight: \"600\",\n      fontSize: \"1.2rem\",\n    },\n  },\n  cardTitle: {\n    fontSize: theme.typography.pxToRem(14),\n  },\n  cardPost: {\n    marginBottom: 12,\n  },\n  cardGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    \"& > .MuiPaper-root\": {\n      margin: theme.spacing(2),\n      minWidth: 275,\n      backgroundColor: theme.palette.background.dp02,\n    },\n  },\n  chartContainer: {\n    position: \"relative\",\n    margin: \"0 auto\",\n    padding: theme.spacing(1),\n    height: theme.spacing(50),\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    \"&&\": {\n      backgroundColor: theme.palette.background.dp03,\n    },\n    \"& * \": {\n      transition: \"none\",\n    },\n  },\n  rankingList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"flex-start\",\n    width: \"100%\",\n    padding: 0,\n    listStyleType: \"none\",\n    \"& li\": {\n      backgroundColor: theme.palette.background.dp03,\n      padding: theme.spacing(1.5),\n      margin: \"0.3rem 0\",\n      overflow: \"visible\",\n      whiteSpace: \"nowrap\",\n      transition: theme.transitions.create([\"all\"], {\n        duration: theme.transitions.duration.complex,\n        easing: theme.transitions.easing.easeOut,\n      }),\n    },\n    \"& li:hover\": {\n      backgroundColor: theme.palette.background.dp08,\n    },\n  },\n}));\n\nexport default useStyles;\n","import { Link } from \"react-router-dom\";\nimport useStyles from \"asset/style/style\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from 'prop-types';\n\n\nfunction ShowcaseCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.title}\n        </Typography>\n        <Typography className={classes.cardPost} color=\"textSecondary\">\n          {props.category}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {props.body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button component={Link} to={props.to} size=\"small\">\n          {props.action}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nShowcaseCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  action: PropTypes.string,\n};\n\nShowcaseCard.defaultProps = {\n  action: '이동하기',\n};\n\nexport default ShowcaseCard;\n","import React, { useState } from \"react\";\nimport useStyles from \"asset/style/style\";\nimport ShowcaseCard from \"components/ShowcaseCard\";\n\nconst Home = () => {\n  const classes = useStyles();\n  // eslint-disable-next-line\n  const [cards, setCards] = useState([\n    {\n      title: \"개발 포트폴리오\",\n      category: \"포트폴리오\",\n      body: \"저에 대한 자기소개입니다. 제가 보유한 기술 스택과, 경력 등에 대해서 알 수 있습니다.\",\n      action: \"더보기\",\n      to: \"/portfolio\",\n    },\n    {\n      title: \"카카오톡 분석기\",\n      category: \"유틸리티\",\n      body: \"단체 채팅방에서 오고 간 대화를 분석할 수 있는 툴입니다. 서로 어떤 내용을 얼마나 채팅했는지를 분석하면서 재미를 느낄 수 있습니다.\",\n      action: \"사용하기\",\n      to: \"/kakao-analyser\",\n    },\n    {\n      title: \"캐릭터 성격 생성기\",\n      category: \"유틸리티\",\n      body: \"웹소설, 드라마, 영화 등을 만드는데 도움될 수 있는 캐릭터 성격 생성기입니다. 가장 권위 있는 심리검사 IPIP-NEO(빅파이브)을 기반으로 랜덤한 성격을 생성합니다. 생성된 성격을 기반으로 캐릭터 성격을 구상하는데 도움이 될 수 있습니다.\",\n      action: \"사용하기\",\n      to: \"/character-maker\",\n    },\n  ]);\n  const cardsComponent = cards.map((element, index) => {\n    return (\n      <ShowcaseCard\n        key={\"card\" + String(index)}\n        title={element.title}\n        category={element.category}\n        body={element.body}\n        action={element.action}\n        to={element.to}\n      ></ShowcaseCard>\n    );\n  });\n  return <div className={classes.cardGrid}>{cardsComponent}</div>;\n};\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\n\nconst Portfolio = () => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <h2>포트폴리오</h2>{\" \"}\n      <Paper className={classes.contentBox} elevation={3}>\n        <h4>작성 중</h4>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\n\nfunction ButtonToAction({ title, buttonText, startIcon, inputType, onChange, onClick }) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.btaBox}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box>\n        <input\n          accept=\".txt\"\n          style={{ display: \"none\" }}\n          id=\"bta-button\"\n          type={inputType}\n          onChange={onChange}\n          onClick={onClick}\n        />\n        <label htmlFor=\"bta-button\">\n          <Button startIcon={startIcon} className={classes.uploadButton} component=\"span\">\n            {buttonText}\n          </Button>\n        </label>\n      </Box>\n    </Box>\n  );\n}\n\nButtonToAction.propTypes = {\n  title: PropTypes.string,\n  buttonText: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  startIcon: PropTypes.element.isRequired,\n  inputType: PropTypes.string.isRequired,\n};\n\nButtonToAction.defaultProps = {\n  title: \"\",\n  onChange: null,\n  onClick: null,\n};\n\nexport default ButtonToAction;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Bar } from \"react-chartjs-2\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    margin: \"0 auto\",\n    padding: theme.spacing(1),\n    height: theme.spacing(50),\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    \"& * \": {\n      transition: \"none\",\n    },\n  },\n}));\n\nfunction FacetChart({ facets }) {\n  const classes = useStyles();\n\n  const chartData = {\n    labels: facets.map((element) => element.name),\n    datasets: [\n      {\n        data: facets.map((element) => element.score),\n        backgroundColor: [\"rgba(255, 255, 255, 0.4)\"],\n        borderColor: [\"rgba(255, 255, 255, 0.7)\"],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    indexAxis: \"y\",\n    scales: {\n      x: {\n        suggestedMin: 0,\n        suggestedMax: 100,\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0.1)\",\n        },\n      },\n      y: {\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0)\",\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  const legend = {};\n\n  return (\n    <Box className={classes.root}>\n      <Bar data={chartData} options={options} legend={legend} />\n    </Box>\n  );\n}\n\nFacetChart.propTypes = {\n  facets: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default FacetChart;\n","export const BIGFIVE_LOW_SCORE_BORDER = 35;\nexport const BIGFIVE_HIGH_SCORE_BORDER = 65;\n\nexport function evalBigFiveScore(score) {\n  if (score <= BIGFIVE_LOW_SCORE_BORDER) {\n    return \"low\";\n  }\n\n  if (score >= BIGFIVE_HIGH_SCORE_BORDER) {\n    return \"high\";\n  }\n\n  return \"middle\";\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport FacetChart from \"components/ChracterMaker/FacetChart\";\nimport { evalBigFiveScore } from \"util/BigFiveStandard.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.background.dp03,\n  },\n  domainTitle: {\n    margin: theme.spacing(1.5),\n  },\n  accHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  accSecondHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  facetPanel: {\n    backgroundColor: theme.palette.background.dp04,\n  },\n  innerPanel: {\n    backgroundColor: theme.palette.background.dp04,\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n    padding: theme.spacing(2),\n  },\n  behaviorChip: {\n    margin: theme.spacing(0.5),\n  },\n  domainDescription: {\n    lineHeight: \"1.5\",\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n}));\n\n// TODO: Add domain description, Add more detail about each personalities, Add personality standard\nfunction PersonalityDetail({ domain, domainDescription, personBehaviors, facets }) {\n  const classes = useStyles();\n\n  const domainScore = Math.round(facets.reduce((acc, val) => acc + val.score, 0) / facets.length);\n  const korEvalMap = Object.freeze({ low: \"낮음\", middle: \"중간\", high: \"높음\" });\n\n  const domainEval = evalBigFiveScore(domainScore);\n  const displayedDomainEval = korEvalMap[domainEval] + \"(\" + String(domainScore) + \")\";\n\n  const facetDescriptions = facets.map((facet, index) => {\n    const facetEval = evalBigFiveScore(facet.score);\n    const displayedEval = String(facet.score) + \"점 - \" + korEvalMap[facetEval];\n    return (\n      <Accordion defaultExpanded={true} key={index}>\n        <AccordionSummary\n          className={classes.facetPanel}\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n        >\n          <Typography className={classes.accHeading}>{facet.name}</Typography>\n          <Typography className={classes.accSecondHeading}>{displayedEval}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.facetPanel}>\n          <Typography>{facet.description[facetEval]}</Typography>\n        </AccordionDetails>\n      </Accordion>\n    );\n  });\n\n  const displayedBehaviors = personBehaviors[domainEval].map((element, index) => {\n    return <Chip className={classes.behaviorChip} label={element} key={index} />;\n  });\n\n  return (\n    <Paper className={classes.root} elevation={3}>\n      <Typography align=\"center\" className={classes.domainTitle} display=\"block\" variant=\"h4\">\n        {domain + \" : \" + displayedDomainEval}\n      </Typography>\n      <FacetChart facets={facets} />\n      <Paper className={classes.innerPanel} elevation={2}>\n        <Typography align=\"center\" display=\"block\" variant=\"h5\">\n          설명\n        </Typography>\n        {domainDescription.split(\"\\n\").map((element, index) => (\n          <Typography className={classes.domainDescription} key={index}>\n            {element}\n          </Typography>\n        ))}\n      </Paper>\n      <Paper className={classes.innerPanel} elevation={2}>\n        <Typography align=\"center\" display=\"block\" variant=\"h5\">\n          보일 수 있는 행동들\n        </Typography>\n        {displayedBehaviors}\n      </Paper>\n      {facetDescriptions}\n    </Paper>\n  );\n}\n\nPersonalityDetail.propTypes = {\n  domain: PropTypes.string.isRequired,\n  domainDescription: PropTypes.string.isRequired,\n  personBehaviors: PropTypes.object.isRequired,\n  facets: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PersonalityDetail;\n","import React, { Fragment, useState } from \"react\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\nimport ButtonToAction from \"components/ButtonToAction\";\nimport PersonalityDetail from \"components/ChracterMaker/PersonalityDetail\";\nimport BigFive from \"asset/BigFive\";\n\n// TODO: Ugly readability at domains. Fix it.\nconst CharacterMaker = () => {\n  const classes = useStyles();\n  const [isGenerated, setIsGenerated] = useState(false);\n\n  const [domains, setDomains] = useState(BigFive[\"domains\"]);\n\n  const generateRandomStat = () => {\n    return Math.floor(Math.random() * Math.floor(100));\n  };\n\n  const allocStatsToDomain = () => {\n    const domainList = [...domains];\n    domainList.forEach((domain, i) => {\n      domain.facets.forEach((facet, j) => {\n        domainList[i].facets[j][\"score\"] = generateRandomStat();\n      });\n    });\n    setDomains(domainList);\n  };\n\n  const generatePersonality = () => {\n    setIsGenerated(true);\n    allocStatsToDomain();\n  };\n\n  const bigFive = domains.map((item, index) => {\n    return (\n      <PersonalityDetail\n        key={index}\n        domain={item.domain}\n        domainDescription={item.description}\n        personBehaviors={item.behavior}\n        facets={item.facets}\n      />\n    );\n  });\n\n  return (\n    <Fragment>\n      <ButtonToAction\n        title=\"버튼을 누르면 새로운 캐릭터 프로필을 만들 수 있습니다\"\n        buttonText=\"생성하기\"\n        onClick={generatePersonality}\n        startIcon={<CheckCircleIcon />}\n        inputType=\"button\"\n      />\n      {isGenerated ? (\n        <Paper className={classes.contentBox} elevation={3}>\n          {bigFive}\n        </Paper>\n      ) : (\n        <div style={{ display: \"none\" }} />\n      )}\n    </Fragment>\n  );\n};\n\nexport default CharacterMaker;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\n\n//TODO: Improve response speed(loading screen), Fix TypeError\nfunction KakaoContent({ index, title, items }) {\n  const classes = useStyles();\n  const [components, setComponents] = useState(\n    items.map((element, index) => {\n      return <CircularProgress key={index} className={classes.loadingCircle} />;\n    })\n  );\n\n  const mounted = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      setComponents(\n        items.map((element, index) => {\n          const data = element[\"calcDataFunc\"]();\n          return element[\"createNodefunc\"](data, index);\n        })\n      );\n    }\n  }, [items]);\n\n  return (\n    <Paper className={classes.contentBox} elevation={3} key={index} ref={mounted}>\n      <Typography variant=\"h5\">{title}</Typography>\n      {components}\n    </Paper>\n  );\n}\n\nKakaoContent.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nexport default KakaoContent;\n","function LocalStorageCacher(md5Hash) {\n  const hashStr = md5Hash;\n\n  const generateName = function (name) {\n    return hashStr + \".\" + name;\n  };\n\n  const isCacheAvailable = function (func) {\n    const localName = generateName(func.name);\n    const rawData = localStorage.getItem(localName);\n    if (rawData === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const cacheData = function (func, data) {\n    const localName = generateName(func.name);\n    const stringfiedData = JSON.stringify(data);\n    localStorage.setItem(localName, stringfiedData);\n  };\n\n  const loadFromCache = function (func) {\n    const localName = generateName(func.name);\n    const rawData = localStorage.getItem(localName);\n\n    if (rawData === null) {\n      return null;\n    }\n\n    return JSON.parse(rawData);\n  };\n\n  return {\n    cacheData: cacheData,\n    loadFromCache: loadFromCache,\n    isCacheAvailable: isCacheAvailable,\n  };\n}\n\nexport default LocalStorageCacher;\n","import { generateHash } from \"util/generateHash.js\";\nimport LocalStorageCacher from \"util/LocalStorageCacher\";\n\nexport const LangEnum = Object.freeze({ ko: 0, en: 1, jp: 2 });\n\nconst KO_DATE_REGEX = /(?<=\\r?\\n)\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2}(?=,)/g;\nconst KO_NAME_REGEX = /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s)).+?(?=\\s:\\s)/g;\n// eslint-disable-next-line\nconst KO_CHATTING_REGEX = /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s.+\\s:\\s)).+/g;\nconst KO_CHATTING_AND_NAME_REGEX =\n  /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s))[\\s\\S]+?(?=\\r?\\n\\d{4}년)/g;\n\nconst KO_PHOTO_REGEX = /(\\s:\\s사진\\r?\\n)|(<사진 읽지 않음>)/g;\nconst KO_VIDEO_REGEX = /(\\s:\\s동영상\\r?\\n)|(<동영상 읽지 않음>)/g;\nconst KO_EMOJI_REGEX = /\\s:\\s이모티콘\\r?\\n/g;\nconst YOUTUBE_LINK_REGEX = /(https:\\/\\/youtu\\.be\\/.+)|(https:\\/\\/www\\.youtube\\.com\\/.+)/g;\n\n// TODO: refactor structure of class(too much overhead, trash readability)\nfunction KakaoChattingAnalyser(content) {\n  //Property\n  const md5Hash = generateHash(content);\n  const cache = LocalStorageCacher(md5Hash);\n  const script = content;\n  let parsedDates = null;\n  //Support Korean only for now\n  const lang =\n    /(?<=\\r?\\n)(저장한 날짜)\\s:\\s\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2}(?=\\r?\\n)/.test(script)\n      ? LangEnum.ko\n      : null;\n\n  //Private Method\n  const tryToLoadFromCache = function (func, ...args) {\n    if (cache.isCacheAvailable(func)) {\n      return cache.loadFromCache(func);\n    }\n    return func.apply(null, args);\n  };\n\n  const countMatchToRegex = function (str, regex) {\n    return ((str || \"\").match(regex) || []).length;\n  };\n\n  const calcTypingRanking = function () {\n    const chattingArray = script.match(KO_CHATTING_AND_NAME_REGEX);\n    let rankingMap = new Map();\n\n    for (let i = 0; i < chattingArray.length; i++) {\n      if (\n        /This message has been hidden by the chatroom managers\\./g.test(chattingArray[i]) ||\n        /님이 나갔습니다\\./g.test(chattingArray[i]) ||\n        /방장이 .+?님에서 .+?님으로 변경되었습니다.\\r?\\n.+?님은 참여자 관리와 채팅방 관리에 신경써주세요!/g.test(\n          chattingArray[i]\n        ) ||\n        /.+?이 들어왔습니다\\./g.test(chattingArray[i])\n      ) {\n        continue;\n      }\n\n      try {\n        const nickname = chattingArray[i].match(/^(.+?)(?=\\s:\\s)/gm)[0];\n        const chatting = chattingArray[i].match(/(?<=.+?\\s:\\s)[\\s\\S]+/g)[0];\n\n        if (rankingMap.has(nickname)) {\n          rankingMap.set(nickname, rankingMap.get(nickname) + chatting.length);\n        } else {\n          rankingMap.set(nickname, chatting.length);\n        }\n      } catch (e) {\n        console.error(e);\n        continue;\n      }\n    }\n\n    const arrForSort = Array.from(rankingMap);\n    arrForSort.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    return arrForSort;\n  };\n\n  const countDayFrequency = function () {\n    parsedDates = parseToDateArray(script);\n    const dayArray = [];\n    parsedDates.forEach((element) => {\n      const dayLabel = converToDayLabel(element.getDay());\n      dayArray.push(dayLabel);\n    });\n\n    return countFrequency(dayArray);\n  };\n\n  const countHourFreqeuncy = function () {\n    parsedDates = parseToDateArray(script);\n    const hourArray = [];\n    parsedDates.forEach((element) => {\n      const hourStr = String(element.getHours()) + \"시\";\n      hourArray.push(hourStr);\n    });\n\n    return countFrequency(hourArray);\n  };\n\n  const countNameFrequnecy = function () {\n    const nameArray = script.match(KO_NAME_REGEX);\n    return countFrequency(nameArray);\n  };\n\n  const parseToDateArray = function () {\n    const dateStrArray = script.match(KO_DATE_REGEX);\n    const dateArray = [];\n    const KO_YEAR_REGEX = /\\d{4}(?=년)/;\n    const KO_MONTH_REGEX = /\\d{1,2}(?=월)/;\n    const KO_DAY_REGEX = /\\d{1,2}(?=일)/;\n    const KO_TIME_REGEX = /(?<=((오전)|(오후))\\s)\\d{1,2}:\\d{1,2}/;\n\n    dateStrArray.forEach((element) => {\n      const year = parseInt(element.match(KO_YEAR_REGEX));\n      const month = parseInt(element.match(KO_MONTH_REGEX));\n      const day = parseInt(element.match(KO_DAY_REGEX));\n      const timeStrArray = element.match(KO_TIME_REGEX)[0].split(\":\");\n      let hour = parseInt(timeStrArray[0]);\n      const minute = parseInt(timeStrArray[1]);\n      const isAfternoon = new RegExp(\"(오후)\").test(element);\n\n      if (isAfternoon) {\n        hour += 12;\n      }\n\n      dateArray.push(new Date(year, month - 1, day, hour, minute));\n    });\n\n    parsedDates = dateArray;\n\n    return parsedDates;\n  };\n\n  const countFrequency = function (arr) {\n    let map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n      if (map.has(arr[i])) {\n        map.set(arr[i], map.get(arr[i]) + 1);\n      } else {\n        map.set(arr[i], 1);\n      }\n    }\n\n    const arrForSort = Array.from(map);\n    arrForSort.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    return arrForSort;\n  };\n\n  const converToDayLabel = function (day) {\n    const week = [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"];\n    const dayLabel = week[day];\n    return dayLabel;\n  };\n\n  return {\n    getMd5Hash: () => {\n      return md5Hash;\n    },\n\n    getLanguage: () => {\n      return lang;\n    },\n\n    getScript: () => {\n      return script;\n    },\n\n    calcBeginDate: () => {\n      return tryToLoadFromCache(parseToDateArray)[0];\n    },\n\n    calcEndDate: () => {\n      const datesArray = tryToLoadFromCache(parseToDateArray);\n      return datesArray[datesArray.length - 1];\n    },\n\n    calcNumOfLines: () => {\n      return tryToLoadFromCache(parseToDateArray).length;\n    },\n\n    calcNameFrequency: function () {\n      return tryToLoadFromCache(countNameFrequnecy);\n    },\n\n    calcDayFrequency: function () {\n      return tryToLoadFromCache(countDayFrequency);\n    },\n\n    calcHourFrequency: function () {\n      return tryToLoadFromCache(countHourFreqeuncy);\n    },\n\n    calcPhotoFrequency: function () {\n      return countMatchToRegex(script, KO_PHOTO_REGEX);\n    },\n\n    calcVideoFrequency: function () {\n      return countMatchToRegex(script, KO_VIDEO_REGEX);\n    },\n\n    calcEmojiFrequency: function () {\n      return countMatchToRegex(script, KO_EMOJI_REGEX);\n    },\n\n    calcYoutubeFrequency: function () {\n      return countMatchToRegex(script, YOUTUBE_LINK_REGEX);\n    },\n\n    calcTypingRanking: function () {\n      return tryToLoadFromCache(calcTypingRanking, script);\n    },\n  };\n}\n\nexport default KakaoChattingAnalyser;\n","export function generateHash(object){\n  const hash = require('object-hash');\n  return hash(object);\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Description(props) {\n  return <h4>{props.text}</h4>;\n}\n\nDescription.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Description;\n","function generateRandomRGB() {\n  const getRandomInt = function (max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const red = getRandomInt(256);\n  const green = getRandomInt(256);\n  const blue = getRandomInt(256);\n\n  return \"rgba(\" + red.toString() + \", \" + green.toString() + \", \" + blue.toString() + \", \";\n}\n\nfunction generateChartColor(array) {\n  const colors = { backgroundColor: [], borderColor: [] };\n\n  array.data.forEach((element) => {\n    const rgb = generateRandomRGB();\n    colors.backgroundColor.push(rgb + \"0.6)\");\n    colors.borderColor.push(rgb + \"1)\");\n  });\n\n  return colors;\n}\n\nexport default generateChartColor;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\nimport generateChartColor from \"util/generateChartColor\";\n\nfunction BarChart(props) {\n  const classes = useStyles();\n\n  const chartData = {\n    labels: props.data.map((element) => element[0]).slice(0, 7),\n    datasets: [\n      {\n        label: \"채팅 수\",\n        data: props.data.map((element) => element[1]).slice(0, 7),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      x: {\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0.0)\",\n        },\n      },\n      y: {\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0.1)\",\n        },\n      },\n    },\n  };\n\n  const legend = {};\n\n  const colors = generateChartColor(chartData.datasets[0]);\n\n  chartData.datasets[0][\"backgroundColor\"] = colors.backgroundColor;\n  chartData.datasets[0][\"borderColor\"] = colors.borderColor;\n\n  return (\n    <Paper className={classes.chartContainer} elevation={2}>\n      <Bar data={chartData} options={options} legend={legend} />\n    </Paper>\n  );\n}\n\nBarChart.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default BarChart;\n","import React from \"react\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from 'prop-types';\n\n\nfunction Ranking(props) {\n  const classes = useStyles();\n  const list = props.data;\n\n  const sumOfItems = list.reduce((acc, value) => acc + value[1], 0);\n  const largestNum = list[0][1];\n  const liTags = list.map((element, index) => {\n    const percent = Math.round((element[1] / sumOfItems) * 10000) / 100;\n    const textContent = String(element[0]) + \" (\" + String(percent) + \"%)\";\n    const width = String((element[1] * 100) / largestNum) + \"%\";\n    return (\n      <li key={index} style={{ width: width }}>\n        {String(index) + '. ' + textContent}\n      </li>\n    );\n  });\n\n  return <ol className={classes.rankingList}>{liTags}</ol>;\n}\n\nRanking.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default Ranking;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\n\nfunction InnnerGrid({ cells }) {\n  const classes = useStyles();\n\n  const cellList = cells.map((element, index) => {\n    return (\n      <Paper key={index} elevation={1}>\n        <h4>{element.title}</h4>\n        <h5>{element.text}</h5>\n      </Paper>\n    );\n  });\n\n  return <div className={classes.innerGrid}>{cellList}</div>;\n}\n\nInnnerGrid.propTypes = {\n  cells: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default InnnerGrid;\n","import React, { Fragment, useState } from \"react\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport ButtonToAction from \"components/ButtonToAction.js\";\nimport KakaoContent from \"components/KakaoContent.js\";\nimport KakaoChattingAnalyser from \"util/KakaoChattingAnalyser.js\";\nimport Description from \"components/kakao_contents/Description\";\nimport BarChart from \"components/kakao_contents/BarChart\";\nimport Ranking from \"components/kakao_contents/Ranking\";\nimport InnnerGrid from \"components/kakao_contents/InnnerGrid\";\nimport useStyles from \"asset/style/style\";\n\n// TODO: Add Loading Effect(With useEffect)\nfunction KakaoAnalyser(props) {\n  const classes = useStyles();\n  const [contents, setContents] = useState([]);\n  const [uploaded, setUploaded] = useState(true);\n\n  const createDescription = function (text, key) {\n    return <Description key={key} text={text}></Description>;\n  };\n\n  const createBarChart = function (data, key) {\n    return <BarChart key={key} data={data}></BarChart>;\n  };\n\n  const createRanking = function (data, key) {\n    return <Ranking key={key} data={data} />;\n  };\n\n  const createInnnerGrid = function (cells, key) {\n    return <InnnerGrid key={key} cells={cells}></InnnerGrid>;\n  };\n\n  const uploadEvent = function (e) {\n    const file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const fileContent = e.target.result;\n      setUploaded(false);\n      const chattingAnalyser = KakaoChattingAnalyser(fileContent);\n      setContents([\n        {\n          title: \"해쉬 코드\",\n          items: [{ createNodefunc: createDescription, calcDataFunc: chattingAnalyser.getMd5Hash }],\n        },\n        {\n          title: \"집계 기간\",\n          items: [\n            {\n              createNodefunc: createDescription,\n              calcDataFunc: () => {\n                const beginDate = chattingAnalyser.calcBeginDate();\n                const endDate = chattingAnalyser.calcEndDate();\n\n                const convertDate = function (date) {\n                  const year = String(date.getFullYear()) + \"년\";\n                  const month = String(date.getMonth() + 1) + \"월\";\n                  const day = String(date.getDate()) + \"일\";\n\n                  return year + \" \" + month + \" \" + day;\n                };\n\n                return convertDate(beginDate) + \" ~ \" + convertDate(endDate);\n              },\n            },\n          ],\n        },\n        {\n          title: \"채팅 수 & 하루 평균 채팅 수\",\n          items: [\n            {\n              createNodefunc: createInnnerGrid,\n              calcDataFunc: () => {\n                const beginDate = chattingAnalyser.calcBeginDate();\n                const endDate = chattingAnalyser.calcEndDate();\n                const numOfLines = chattingAnalyser.calcNumOfLines();\n\n                const gapTime = endDate.getTime() - beginDate.getTime();\n                const gapDay = Math.floor(gapTime / (1000 * 60 * 60 * 24));\n\n                return [\n                  { title: \"채팅 수\", text: String(numOfLines) },\n                  { title: \"하루 평균 채팅 수\", text: String(Math.floor(numOfLines / gapDay)) },\n                ];\n              },\n            },\n          ],\n        },\n        {\n          title: \"사진, 동영상, 이모티콘, 유튜브 링크 수\",\n          items: [\n            {\n              createNodefunc: createInnnerGrid,\n              calcDataFunc: () => {\n                return [\n                  { title: \"사진\", text: chattingAnalyser.calcPhotoFrequency() },\n                  { title: \"동영상\", text: chattingAnalyser.calcVideoFrequency() },\n                  { title: \"이모티콘\", text: chattingAnalyser.calcEmojiFrequency() },\n                  { title: \"유튜브 링크 수\", text: chattingAnalyser.calcYoutubeFrequency() },\n                ];\n              },\n            },\n          ],\n        },\n        {\n          title: \"채팅방에서 말을 가장 많이 한 사람\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcNameFrequency },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcNameFrequency },\n          ],\n        },\n        {\n          title: \"채팅방에서 타이핑한 글자수\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcTypingRanking },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcTypingRanking },\n          ],\n        },\n        {\n          title: \"가장 활발한 시간대\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcHourFrequency },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcHourFrequency },\n          ],\n        },\n        {\n          title: \"가장 활발한 요일\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcDayFrequency },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcDayFrequency },\n          ],\n        },\n      ]);\n    };\n    reader.readAsText(file);\n  };\n\n  const components = contents.map((element, index) => {\n    return (\n      <KakaoContent\n        key={index}\n        className={classes.contentBox}\n        title={element.title}\n        items={element.items}\n      ></KakaoContent>\n    );\n  });\n\n  return (\n    <Fragment>\n      {uploaded ? (\n        <ButtonToAction\n          title=\"카카오톡 대화 내보내기 기능을 사용해서 파일을 업로드 해 주세요\"\n          buttonText=\"업로드\"\n          onChange={uploadEvent}\n          startIcon={<CloudUploadIcon />}\n          inputType=\"file\"\n        />\n      ) : (\n        components\n      )}\n    </Fragment>\n  );\n}\n\nexport default KakaoAnalyser;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport SpeakerNotesIcon from \"@material-ui/icons/SpeakerNotes\";\nimport { Link } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem button component={Link} to=\"/\">\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"홈\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/portfolio\">\n          <ListItemIcon>\n            <PortraitIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"개발 포트폴리오\" />\n        </ListItem>\n        <Divider />\n        <ListItem button component={Link} to=\"/kakao-analyser\">\n          <ListItemIcon>\n            <SpeakerNotesIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"카카오톡 분석기\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/character-maker\">\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"캐릭터 성격 생성기\" />\n        </ListItem>\n      </List>\n      \n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} id='menu-wrapper'><MenuIcon fontSize='large'/></Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import \"asset/style/menu.css\";\nimport \"asset/style/font.css\";\nimport { defaults } from \"react-chartjs-2\";\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Home, Portfolio, KakaoAnalyser, CharacterMaker } from \"pages\";\nimport Menu from \"components/Menu\";\nimport useStyles from \"asset/style/style\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction App() {\n  const classes = useStyles();\n  defaults.font.size = \"16\";\n  defaults.color = \"#fff\";\n  defaults.plugins.tooltip.displayColors = false;\n\n  /*eslint-disable */\n  return (\n    <Paper elevation={3} className={classes.Container}>\n      <Menu></Menu>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/portfolio\" component={Portfolio} />\n      <Route path=\"/kakao-analyser\" component={KakaoAnalyser} />\n      <Route path=\"/character-maker\" component={CharacterMaker} />\n      <footer>\n        <p>\n          Made by&nbsp;\n          <a href=\"https://bustermachinelab.net/\" className={classes.link} target=\"_blank\" rel=\"author\">\n            BK927\n          </a>\n        </p>\n      </footer>\n    </Paper>\n  );\n}\n\nexport default App;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport App from \"App\";\n\n//TODO: Add responsive style\nfunction Root() {\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        light: \"#ff7961\",\n        main: \"#f44336\",\n        dark: \"#ba000d\",\n      },\n      secondary: {\n        light: \"#8561c5\",\n        main: \"#673ab7\",\n        dark: \"#482880\",\n      },\n      background: {\n        paper: \"#1F1F1F\",\n        default: \"#121212\",\n        dp01: \"#1F1F1F\",\n        dp02: \"#2C2C2C\",\n        dp03: \"#383838\",\n        dp04: \"#454545\",\n        dp05: \"#525252\",\n        dp06: \"#5F5F5F\",\n        dp07: \"#6B6B6B\",\n        dp08: \"#B3B3B3\",\n      },\n      text: {\n        highEmphasis: \"#F2F2F2\",\n        midiumEmphasis: \"#E6E6E6\",\n      },\n    },\n    typography: {\n      fontFamily: \"Noto Sans KR, Roboto, sans-serif\",\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          html: {\n            WebkitFontSmoothing: \"auto\",\n            display: \"grid\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            margin: \"0\",\n          },\n          body: {\n            display: \"grid\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            margin: \"0\",\n          },\n          footer: {\n            display: \"block\",\n            textAlign: \"center\",\n            fontSize: \"1.4rem\",\n            fontWeight: \"500\",\n          },\n        },\n      },\n    },\n  });\n\n  return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter basename=\"/\">\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n  );\n}\n\nexport default Root;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'Root'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}