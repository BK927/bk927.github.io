{"version":3,"sources":["asset/style/style.js","components/ShowcaseCard.js","pages/Home.js","pages/Portfolio.js","components/ButtonToAction.js","components/ChracterMaker/FacetChart.js","components/ChracterMaker/PersonalityDetail.js","pages/CharacterMaker.js","components/KakaoContent.js","util/LocalStorageCacher.js","util/KakaoChattingAnalyser.js","util/generateHash.js","components/kakao_contents/Description.js","util/generateChartColor.js","components/kakao_contents/BarChart.js","components/kakao_contents/Ranking.js","components/kakao_contents/InnnerGrid.js","pages/KakaoAnalyser.js","components/Menu.js","App.js","Root.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","Container","borderRadius","maxWidth","minWidth","marginTop","spacing","marginBottom","marginLeft","marginRight","padding","loadingCircle","display","btaBox","textAlign","width","justifyContent","flexDirection","height","margin","overflow","alignItems","fontSize","transition","contentBox","position","boxSizing","backgroundColor","palette","background","dp02","innerGrid","flexBasis","gap","alignContent","dp03","flex","link","color","secondary","main","textDecoration","fontWeight","light","transitions","create","duration","complex","easing","easeOut","uploadButton","primary","text","cardTitle","cardPost","cardGrid","gridTemplateColumns","chartContainer","rankingList","listStyleType","whiteSpace","dp08","domainTitle","ShowcaseCard","props","classes","Card","CardContent","Typography","variant","component","title","className","category","body","CardActions","Button","Link","to","size","action","defaultProps","Home","useState","cards","cardsComponent","map","element","index","String","Portfolio","Paper","elevation","ButtonToAction","buttonText","startIcon","inputType","onChange","onClick","Box","accept","style","id","type","htmlFor","FacetChart","facets","chartData","labels","name","datasets","data","score","borderColor","borderWidth","options","maintainAspectRatio","responsive","indexAxis","scales","x","suggestedMin","suggestedMax","grid","drawBorder","y","plugins","legend","PersonalityDetail","domain","domainScore","Math","round","reduce","acc","val","length","descriptions","facet","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","description","CharacterMaker","isGenerated","setIsGenerated","domains","setDomains","allocStatsToDomain","domainList","forEach","i","j","floor","random","bigFive","item","KakaoContent","items","CircularProgress","components","setComponents","mounted","useRef","useEffect","current","ref","LocalStorageCacher","md5Hash","hashStr","generateName","cacheData","func","localName","stringfiedData","JSON","stringify","localStorage","setItem","loadFromCache","rawData","getItem","parse","isCacheAvailable","LangEnum","Object","freeze","ko","en","jp","KO_DATE_REGEX","KO_NAME_REGEX","KO_CHATTING_AND_NAME_REGEX","KO_PHOTO_REGEX","KO_VIDEO_REGEX","KO_EMOJI_REGEX","YOUTUBE_LINK_REGEX","KakaoChattingAnalyser","content","object","require","hash","cache","script","parsedDates","lang","test","tryToLoadFromCache","args","apply","countMatchToRegex","str","regex","match","calcTypingRanking","chattingArray","rankingMap","Map","nickname","chatting","has","set","get","e","console","error","arrForSort","Array","from","sort","first","second","countDayFrequency","parseToDateArray","dayArray","dayLabel","converToDayLabel","getDay","push","countFrequency","countHourFreqeuncy","hourArray","hourStr","getHours","countNameFrequnecy","nameArray","dateStrArray","dateArray","KO_YEAR_REGEX","KO_MONTH_REGEX","KO_DAY_REGEX","KO_TIME_REGEX","year","parseInt","month","day","timeStrArray","split","hour","minute","RegExp","Date","arr","getMd5Hash","getLanguage","getScript","calcBeginDate","calcEndDate","datesArray","calcNumOfLines","calcNameFrequency","calcDayFrequency","calcHourFrequency","calcPhotoFrequency","calcVideoFrequency","calcEmojiFrequency","calcYoutubeFrequency","Description","generateChartColor","array","colors","rgb","getRandomInt","max","red","green","blue","toString","generateRandomRGB","BarChart","slice","label","Ranking","list","sumOfItems","value","largestNum","liTags","percent","textContent","InnnerGrid","cellList","cells","KakaoAnalyser","contents","setContents","uploaded","setUploaded","createDescription","key","createBarChart","createRanking","createInnnerGrid","file","target","files","reader","FileReader","onload","fileContent","result","chattingAnalyser","createNodefunc","calcDataFunc","beginDate","endDate","convertDate","date","getFullYear","getMonth","getDate","numOfLines","gapTime","getTime","gapDay","readAsText","fullList","SwipeableTemporaryDrawer","React","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","clsx","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","Divider","Fragment","SwipeableDrawer","onClose","onOpen","App","defaults","font","tooltip","displayColors","exact","path","href","rel","Root","createMuiTheme","dark","paper","default","dp01","dp04","dp05","dp06","dp07","highEmphasis","midiumEmphasis","typography","fontFamily","overrides","MuiCssBaseline","html","WebkitFontSmoothing","footer","ThemeProvider","CssBaseline","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06df6a48.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    borderRadius: \"10px\",\n    maxWidth: \"1400px\",\n    minWidth: \"30vw\",\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: theme.spacing(4),\n  },\n  loadingCircle: {\n    marginTop: theme.spacing(15),\n    marginBottom: theme.spacing(15),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    \"&&\": {\n      display: \"block\",\n    },\n  },\n  btaBox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"auto\",\n    margin: \"30px auto 30px auto\",\n    overflow: \"auto\",\n    \"& > .MuiTypography-root\": {\n      margin: theme.spacing(7),\n    },\n    \"& > .MuiButton-root\": {\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      margin: \"0 auto\",\n      borderRadius: \"0.25em\",\n      fontSize: \"1.5rem\",\n      transition: \"all 0.3s ease-out\",\n    },\n  },\n  contentBox: {\n    position: \"relative\",\n    display: \"block\",\n    boxSizing: \"content-box\",\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    height: \"max-content\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: theme.spacing(2),\n    \"&&\": {\n      backgroundColor: theme.palette.background.dp02,\n    },\n    \"& h5\": {\n      display: \"block\",\n      marginBottom: theme.spacing(3.5),\n    },\n  },\n  innerGrid: {\n    display: \"flex\",\n    flexBasis: \"0\",\n    gap: theme.spacing(2),\n    alignContent: \"space-between\",\n    \"& > div\": {\n      backgroundColor: theme.palette.background.dp03,\n      borderRadius: \"5px\",\n      padding: \"8px 15px\",\n      flex: \"1\",\n    },\n    \"& > div > h4\": {\n      display: \"block\",\n      marginBottom: \"15px\",\n    },\n  },\n  link: {\n    color: theme.palette.secondary.main,\n    textDecoration: \"none\",\n    fontWeight: \"700\",\n    \"&:hover\": {\n      color: theme.palette.secondary.light,\n    },\n    transition: theme.transitions.create([\"all\"], {\n      duration: theme.transitions.duration.complex,\n      easing: theme.transitions.easing.easeOut,\n    }),\n  },\n  uploadButton: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      padding: theme.spacing(1.6),\n      fontWeight: \"600\",\n      fontSize: \"1.2rem\",\n    },\n  },\n  cardTitle: {\n    fontSize: 14,\n  },\n  cardPost: {\n    marginBottom: 12,\n  },\n  cardGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    \"& > .MuiPaper-root\": {\n      margin: theme.spacing(2),\n      minWidth: 275,\n      backgroundColor: theme.palette.background.dp02,\n    },\n  },\n  chartContainer: {\n    position: \"relative\",\n    margin: \"0 auto\",\n    padding: theme.spacing(1),\n    height: theme.spacing(50),\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    \"&&\": {\n      backgroundColor: theme.palette.background.dp03,\n    },\n    \"& * \": {\n      transition: \"none\",\n    },\n  },\n  rankingList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"flex-start\",\n    width: \"100%\",\n    padding: 0,\n    listStyleType: \"none\",\n    \"& li\": {\n      backgroundColor: theme.palette.background.dp03,\n      padding: theme.spacing(1.5),\n      margin: \"0.3rem 0\",\n      overflow: \"visible\",\n      whiteSpace: \"nowrap\",\n      transition: theme.transitions.create([\"all\"], {\n        duration: theme.transitions.duration.complex,\n        easing: theme.transitions.easing.easeOut,\n      }),\n    },\n    \"& li:hover\": {\n      backgroundColor: theme.palette.background.dp08,\n    },\n  },\n  domainTitle: {\n    \"&&\": {\n      margin: theme.spacing(3),\n    },\n  },\n}));\n\nexport default useStyles;\n","import { Link } from \"react-router-dom\";\nimport useStyles from \"asset/style/style\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from 'prop-types';\n\n\nfunction ShowcaseCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.title}\n        </Typography>\n        <Typography className={classes.cardPost} color=\"textSecondary\">\n          {props.category}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {props.body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button component={Link} to={props.to} size=\"small\">\n          {props.action}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nShowcaseCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  action: PropTypes.string,\n};\n\nShowcaseCard.defaultProps = {\n  action: '이동하기',\n};\n\nexport default ShowcaseCard;\n","import React, { useState } from \"react\";\nimport useStyles from \"asset/style/style\";\nimport ShowcaseCard from \"components/ShowcaseCard\";\n\nconst Home = () => {\n  const classes = useStyles();\n  // eslint-disable-next-line\n  const [cards, setCards] = useState([\n    {\n      title: \"개발 포트폴리오\",\n      category: \"포트폴리오\",\n      body: \"저에 대한 자기소개입니다. 보유한 기술 스택과, 경력 등에 대해서 알 수 있습니다.\",\n      action: \"더보기\",\n      to: \"/portfolio\",\n    },\n    {\n      title: \"카카오톡 분석기\",\n      category: \"유틸리티\",\n      body: \"단체 채팅방에서 오고 간 대화를 분석할 수 있는 툴입니다.\",\n      action: \"사용하기\",\n      to: \"/kakao-analyser\",\n    },\n    {\n      title: \"캐릭터 성격 생성기\",\n      category: \"유틸리티\",\n      body: \"웹소설, 드라마, 영화 등을 만드는데 도움될 수 있는 캐릭터 성격 생성기입니다. 가장 권위 있는 심리검사 빅파이브를 기반으로 다양한 틀을 기반으로 캐릭터 성격을 구상하는데 도움을 줍니다.\",\n      action: \"사용하기\",\n      to: \"/character-maker\",\n    },\n  ]);\n  const cardsComponent = cards.map((element, index) => {\n    return (\n      <ShowcaseCard\n        key={\"card\" + String(index)}\n        title={element.title}\n        category={element.category}\n        body={element.body}\n        action={element.action}\n        to={element.to}\n      ></ShowcaseCard>\n    );\n  });\n  return <div className={classes.cardGrid}>{cardsComponent}</div>;\n};\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\n\nconst Portfolio = () => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <h2>포트폴리오</h2>{\" \"}\n      <Paper className={classes.contentBox} elevation={3}>\n        <h4>작성 중</h4>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\n\nfunction ButtonToAction({ title, buttonText, startIcon, inputType, onChange, onClick }) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.btaBox}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box>\n        <input\n          accept=\".txt\"\n          style={{ display: \"none\" }}\n          id=\"bta-button\"\n          type={inputType}\n          onChange={onChange}\n          onClick={onClick}\n        />\n        <label htmlFor=\"bta-button\">\n          <Button startIcon={startIcon} className={classes.uploadButton} component=\"span\">\n            {buttonText}\n          </Button>\n        </label>\n      </Box>\n    </Box>\n  );\n}\n\nButtonToAction.propTypes = {\n  title: PropTypes.string,\n  buttonText: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  startIcon: PropTypes.element.isRequired,\n  inputType: PropTypes.string.isRequired,\n};\n\nButtonToAction.defaultProps = {\n  title: \"\",\n  onChange: null,\n  onClick: null,\n};\n\nexport default ButtonToAction;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\n\nfunction FacetChart({ facets }) {\n  const classes = useStyles();\n\n  const chartData = {\n    labels: facets.map((element) => element.name),\n    datasets: [\n      {\n        data: facets.map((element) => element.score),\n        backgroundColor: [\"rgba(255, 255, 255, 0.4)\"],\n        borderColor: [\"rgba(255, 255, 255, 0.7)\"],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    indexAxis: \"y\",\n    scales: {\n      x: {\n        suggestedMin: 0,\n        suggestedMax: 100,\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0.1)\",\n        },\n      },\n      y: {\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0)\",\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  const legend = {};\n\n  return (\n    <Paper className={classes.chartContainer} elevation={2}>\n      <Bar data={chartData} options={options} legend={legend} />\n    </Paper>\n  );\n}\n\nFacetChart.propTypes = {\n  facets: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default FacetChart;\n","import React, { Fragment } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\nimport FacetChart from \"components/ChracterMaker/FacetChart\";\n\n// TODO: Add domain description, Add more detail about each personalities, Add personality standard\nfunction PersonalityDetail({ domain, facets }) {\n  const classes = useStyles();\n\n  const domainScore = Math.round(facets.reduce((acc, val) => acc + val.score, 0) / facets.length);\n\n  const descriptions = facets.map((facet, index) => {\n    return (\n      <Accordion key={index}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Typography>{facet.name}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>{facet.description}</Typography>\n        </AccordionDetails>\n      </Accordion>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Typography className={classes.domainTitle} variant=\"h4\">\n        {domain + \" : \" + String(domainScore)}\n      </Typography>\n      <FacetChart facets={facets} />\n      {descriptions}\n    </Fragment>\n  );\n}\n\nPersonalityDetail.propTypes = {\n  domain: PropTypes.string.isRequired,\n  facets: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PersonalityDetail;\n","import React, { Fragment, useState } from \"react\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\nimport ButtonToAction from \"components/ButtonToAction\";\nimport PersonalityDetail from \"components/ChracterMaker/PersonalityDetail\";\n\n// TODO: Ugly readability at domains. Fix it.\nconst CharacterMaker = () => {\n  const classes = useStyles();\n  const [isGenerated, setIsGenerated] = useState(false);\n\n  const [domains, setDomains] = useState([\n    {\n      domain: \"외향성(Extraversion)\",\n      description:\n        '외향성은 외부 세계와의 확고한 관계에 의해 표시됩니다. 외향관은 사람들과 함께 있는 것을 즐기고, 에너지가 풍부하며, 긍정적인 감정을 자주 경험합니다. 그들은 열렬하고 행동 지향적인 경향이 있으며 \"그렇습니다!\"라고 말하기 쉽습니다. 또는 재미를 찾으러 \"가자!\"라고 합니다. 모임에서 그들은 말하기를 좋아하고, 자기주장을 하며, 스스로에게 관심을 집중시키기를 좋아합니다.\\n 내향성은 활력, 에너지 및 활동 수준이 부족합니다. 그들은 조용하고, 낮은 텐션이며, 계획적이며, 사회적인 세계로부터 이탈하는 경향이 있습니다. 그들의 부족한 사회적 참여를 수줍음이나 우울증으로 해석해서는 안 됩니다 . 내향성은 단순히 외향적 사람보다 자극이 덜 필요하며 혼자있는 것을 선호합니다. 내향적 성향의 독립성과 신중함은 종종 불친절함이나 오만함으로 착각합니다. 실제로는, agreeableness 차원에서 높은 점수를 받은 내향적인 사람은 본인이 남을 찾아가지는 않지만, 누군가가 자신을 찾아온다면 좋아할 것입니다.',\n      facets: [\n        {\n          name: \"친근함(Friendliness)\",\n          description:\n            \"친근한 사람들은 다른 사람들을 진정으로 좋아하고 긍정적인 감정을 공개적으로 드러냅니다. 친구를 빨리 사귈 수 있으며 친밀한 관계를 형성하기 쉽습니다. 친근함에서 낮은 점수를 획득한 사람은 반드시 냉정하고 적대적인 것은 아니지만, 타인에게 접근하지 않으며 거리감이 있고 내성적인 사람으로 인식됩니다.\",\n        },\n        {\n          name: \"사교성(Gregariousness)\",\n          description:\n            \"사교적인 사람들은 단체의 즐거운 자극과 보상을 찾아냅니다. 그들은 군중의 흥분을 즐기는 경향이 있습니다. 낮은 득점자는 압도되는 경향이 있으므로 큰 군중들을 적극적으로 기피하는 경향이 있습니다. 그들은 때로는 사람들과 함께하는 것을 싫어하는 것은 아니지만, 프라이버시와 자신에 대한 시간의 필요성은 해당 영역에서 높은 점수를 얻은 개인보다 훨씬 큽니다.\",\n        },\n        {\n          name: \"자기 주장(Assertiveness)\",\n          description:\n            \"자기 주장에서 높은 점수를 획득한 사람은 발언권을 가져가고, 책임을 지며, 다른 사람에게 활동을 지시하는 것을 좋아합니다. 그들은 그룹의 리더가 되는 경향이 있습니다. 점수가 낮은 사람은 많이 말하지 않고 다른 사람들이 그룹 활동을 통제하게 만듭니다. \",\n        },\n        {\n          name: \"활동적인 정도(Activity Level)\",\n          description:\n            \"활동적인 개인은 빠른 속도로 바쁜 삶을 살아갑니다. 그들은 빠르게, 정력적으로, 그리고 활발하게 움직이며 많은 활동에 참여합니다. 이 척도에서 점수가 낮은 사람들은 느리고 여유있게 느긋한 페이스를 따릅니다.\",\n        },\n        {\n          name: \"자극-추구(Excitement-Seeking)\",\n          description:\n            \"이 영역의 고득점 자들은 높은 수준의 자극없이는 쉽게 지루해 합니다. 그들은 밝은 불빛을 사랑하고 부산을 떱니다. 그들은 위험을 감수하고 스릴을 추구합니다. 낮은 득점자는 소음과 소동에 압도 당하고 스릴을 추구하는데 부정적입니다.\",\n        },\n        {\n          name: \"쾌활함(Cheerfulness)\",\n          description:\n            \"이 척도는 부정적인 감정 이 아닌 긍정적 기분과 감정을 측정합니다(신경학적 영역의 일부임). 이 척도에서 높은 점수를 받은 사람은 일반적으로 행복, 열정, 낙천주의 및 기쁨을 포함하여 긍정적인 감정을 경험합니다. 낮은 득점자들은 그렇게 정력적이고 명량하기 쉽지 않습니다.\",\n        },\n      ],\n    },\n    {\n      domain: \"수용성(Agreeableness)\",\n      description:\n        \"수용성은 협동성과 사회적 조화에 대한 개인의 차이를 반영합니다. 수용적 사람들은 다른 사람들과 어울리는 것을 중요하게 생각합니다. 그러므로 그들은 사려 깊고, 친절하며, 관대하고, 타인을 도우며, 타인과의 이익을 위해 타협하고자 합니다. 수용적인 사람들은 또한 인간 본성에 대해 낙관적인 견해를 가지고 있습니다. 그들은 사람들이 기본적으로 정직하고, 예의 바르며, 믿을만 하다고 믿습니다/n비수용적인 개인은 다른 사람들과 어울리는 것보다 자기 이익을 우선시합니다. 그들은 일반적으로 다른 사람의 복지에 관심이 없기 때문에 다른 사람들을 위해 자신이 베풀 가능성은 거의 없습니다. 때때로 다른 사람들의 동기에 대한 회의적인 태도는 의심하며, 비우호적이며, 비협조이게 합니다.\\n수용성은 인기를 얻고 유지하는데 확실히 유리합니다. 수용적인 사람들은 비수용적인 사람들보다 더 사랑받습니다. 반면에 수용성은 냉정하거나 절대적인 목표를 위한 결정을 내려야 하는 상황에서는 유용하지 않습니다. 비수용적인 사람들은 훌륭한 과학자, 비평가, 군인이 될 수 있습니다.\",\n      facets: [\n        {\n          name: \"수용성(Agreeableness)\",\n          description:\n            \"높은 신뢰를 가진 사람은 대부분의 사람들이 공정하고 정직하며 좋은 의도를 가지고 있다고 가정합니다. 신뢰도가 낮은 사람들은 다른 사람들을 이기적이고, 사악하며 잠재적으로 위험한 것으로 봅니다.\",\n        },\n        {\n          name: \"도덕성(Morality)\",\n          description:\n            \"이 척도에서 높은 점수를 받는 사람들은 다른 사람들을 상대 할 때 가식적이거나 속일 필요가 없다고 생각하므로 솔직하고 진솔합니다. 낮은 득점자는 사회적 관계에서 어느 정도의 기만이 필요하다고 생각합니다. 사람들은 비교적 간단하게 이 척도에서 고득점자들을 척도와 연관시켜서 생각합니다. 보통 이 척도에서 낮은 점수를 받은 사람들이 실질적으로 크게 실제 척도와 연관 되어지지 않는 것을 발견합니다. 낮은 득점자가 파렴치하거나 비도덕적이지 않다는 것을 분명히 해야합니다. 그들은 단순히 더 많은 방어적이고 공개적으로 모든 진실을 밝히기를 꺼려합니다.\",\n        },\n        {\n          name: \"이타심(Altruism)\",\n          description:\n            \"이타적인 사람들은 다른 사람들이 진심으로 이익을 얻을 수 있도록 도와줍니다. 결과적으로, 그들은 일반적으로 도움이 필요한 사람들을 기꺼이 도우려고 합니다. 이타적인 사람들은 다른 사람들을 위해 일하는 것이 자기 희생이 아닌 자기 실현의 한 형태라는 것을 알고 있습니다. 이 척도의 점수가 낮은 사람은 도움이 필요한 사람들을 돕는 것을 특별히 좋아하지 않습니다. 도움 요청은 자아 실현을 위한 기회라기보다는 부과처럼 느낍니다.\",\n        },\n        {\n          name: \"협동성(Cooperation)\",\n          description:\n            \"이 척도에서 높은 점수를 얻은 개인은 대립을 싫어합니다. 그들은 다른 사람들과 어울리기 위해 자신의 욕구를 타협하거나 부인하기를 꺼리지 않습니다. 이 척도에서 점수가 낮은 사람들은 다른 사람들의 길을 위협 할 가능성이 더 큽니다.\",\n        },\n        {\n          name: \"겸손(Modesty)\",\n          description:\n            \"이 척도의 고득점 자들은 자신이 다른 사람들보다 낫다 고 주장하는 것을 좋아하지 않습니다. 어떤 경우에는 이러한 태도가 낮은 자신감이나 자존심에서 파생 되는 것일 수 있습니다. 그럼에도 불구하고 높은 자부심을 가진 일부 사람들은 볼썽사납고 천박하다는 것으로 보입니다. 자기 자신을 우수하다고 자랑하는 사람들은 배타적으로 오만하다고 다른 사람들에게 보여지는 경향이 있습니다.\",\n        },\n        {\n          name: \"동정심(Sympathy)\",\n          description:\n            \"이 척도에서 높은 점수를 얻은 사람들은 다정하고 동정심이 많습니다. 그들은 다른 사람들의 고통을 간접적으로 느끼고 동정심을 느낄 가능성이 높습니다. 낮은 점수의 사람들은 인간의 고통에 강하게 영향을 받지 않습니다. 그런 사람들은 이성에 따라 객관적인 판단을 내리는 데 자부심을 느낍니다. 그들은 자비보다 진리와 공평한 정의에 더 관심이 있습니다.\",\n        },\n      ],\n    },\n    {\n      domain: \"성실성(Conscientiousness)\",\n      description:\n        \"성실성은 우리가 우리의 충동을 조절, 절제 및 관리하는 방식에 관련됩니다. 충동은 본질적으로 나쁘지 않습니다. 때로는 시간 제약으로 신속한 결정이 필요하며, 우리의 첫 번째 충동에 따르는 것이 효과적인 대응이 될 수 있습니다. 또한, 일보다는 놀이의 시간에, 자발적이고 충동적인 행동은 재미있을 수 있습니다. 충동적인 개인은 다른 사람들이 다채롭고 재미있게 보며 엉뚱해 보일 수 있습니다.\\n그럼에도 불구하고, 충동에 따르면 여러 가지 문제가 발생할 수 있습니다. 일부 충동은 반사회적입니다. 통제되지 않은 반사회적 행위는 다른 사회 구성원에게 해를 끼칠뿐만 아니라 그러한 충동적인 행동을 한 가해자에게 응징을 초래할 수 있습니다. 충동적인 행동에 대한 또 다른 문제점은 충동에 따르는 것은 즉각적인 보상을 하지만 종종 바람직하지 않은 장기적인 결과를 초래한다는 것입니다. 예를 들어 과도한 사교 활동으로 인해 직장에서 해고되거나 중요한 관계가 해체되거나 결국 건강을 해치는 마약을 남용하게 됩니다.\\n충동적인 행동은 비록 심각하게 파괴적이지 않더라도 의미있게 사람의 효율성을 감소시킵니다. 충동적으로 행동하는 것은 대안의 행동 과정을 심사 숙고하지 못하게 하는데, 그 대안 중 일부는 충동적인 선택보다 현명할 것입니다. 충동은 또한 단계적으로 또는 단계적으로 체계화 된 순서가 요구되는 프로젝트에서 사람들을 삼천포로 빠지게 합니다. 따라서 충동적인 사람의 성취는 작고, 산발적이고, 일관성이 없습니다.\\n지능의 특징(사람을 잠재적으로 이전의 삶의 형태와 구분 짓는 것)은 충동에 맡겨서 행동하기 전에 미래의 결과를 생각하는 능력입니다. 지적 활동은 장거리 목표에 대한 숙고, 이러한 목표에 대한 경로 구성 및 계획, 반대되는 단기간의 충동에도 불구하고 목표 달성을 지속하는 것과 관련됩니다. 지능이 충동 조절과 관련된 개념이라는 것은 성실성 영역의 또 다른 이름인 '신중함'이라는 용어로 잘 알 수 있습니다. 신중한 것은 현명하고 주의를 잘 기울이는 것을 의미합니다. 성실성 척도에서 높은 점수를 받은 사람은 사실 다른 사람들이 지적으로 인식합니다.\\n높은 성실성의 이점은 명백합니다. 성실한 개인은 합목적적인 계획과 끈기를 통해 문제를 피하고 높은 수준의 성공을 성취합니다. 그들은 또한 다른 사람들에 의해 지능적이고 신뢰할 수 있는 것으로 여겨집니다. 부정적인 측면에서는, 그들은 완벽 주의자 및 일 중독자 일 수 있습니다. 더욱이, 매우 성실한 개인은 지루하다고 여겨 질 수 있습니다. 성실하지 않은 사람들은 자신의 신뢰도가 낮고 야망이 부족하며 선을 지키지 못해 비난을 받을 수도 있지만, 짧막한 즐거움을 많이 느낄 것이고 지루하다는 말을 들을 일은 없을 겁니다.\",\n      facets: [\n        {\n          name: \"자기 효능감(Self-Efficacy)\",\n          description:\n            \"자기 효능감은 무언가를 성취하는데 있어서 자신의 능력에 대한 자신감을 나타냅니다. 높은 점수를 받는 사람은 성공을 달성하는 데 필요한 정보(상식), 추진력 및 자제력이 있다고 생각합니다. 낮은 득점자는 효과적이지 않으며 자신의 삶을 통제하지 못한다는 느낌을 가질 수 있습니다.\",\n        },\n        {\n          name: \"질서(Orderliness)\",\n          description:\n            \"질서에 대해 높은 점수를 받은 사람은 잘 체계화되어 있습니다. 그들은 규칙과 일정에 따라 생활하기를 좋아합니다. 그들은 목록을 작성하고 계획을 세웁니다. 낮은 득점자는 무계회적이거나 산만한 경향이 있습니다.\",\n        },\n        {\n          name: \"책임감(Dutifulness)\",\n          description:\n            \"이 척도는 사람의 의무감을 반영합니다. 이 척도에서 높은 점수를 받은 사람들은 강한 도덕적 의무감을 갖고 있습니다. 낮은 득점자는 과도하게 제한하는 계약, 규칙 및 규정이라고 생각합니다. 그들은 신뢰할 수 없거나 심지어 무책임한 것으로 보일 수 있습니다.\",\n        },\n        {\n          name: \"성취 추구(Achievement-Striving)\",\n          description:\n            \"이 척도에서 높은 점수를 받은 개인은 탁월함을 얻기 위해 열심히 노력합니다. 성공으로 인식하게 되면 그들은 숭고한 목표를 향한 궤도에 오르게 됩니다. 그들은 종종 삶의 방향성이 강하지만 극단적으로 높은 점수는 편협하고 자신의 일에 사로 잡혀있을 수 있습니다. 낮은 득점자는 최소한의 작업으로 만족하며며, 다른 사람들은 게으르다고 생각할 수도 있습니다.\",\n        },\n        {\n          name: \"절제(Self-Discipline)\",\n          description:\n            \"많은 사람들이 의지력이라고 부르는 절제는 일을 끝마칠 때까지 어렵거나 불쾌한 작업을 지속 할 수 있는 능력을 말합니다. 높은 자제력을 가진 사람들은 방해물이 있으면 일을 시작하고 궤도에 머물러야하는 것을 꺼릴 수 있습니다. 자기 통제력이 낮은 사람들은 미루고 후속 조치가 불량하며 종종 과제를 완료하지 못합니다.\",\n        },\n        {\n          name: \"신중함(Cautiousness)\",\n          description:\n            \"신중함은 행동하기 전에 가능성을 생각하는 기질을 설명합니다. 신중함 척도에서 높은 점수를 받는 사람들은 결정을 내릴 때 시간을 들입니다. 낮은 득점자는 대안에 대한 고려나 결과에 대한 생각을 하지 않고 첫 번째로 떠오르는 것을 말하거나 수행합니다. \",\n        },\n      ],\n    },\n    {\n      domain: \"신경성(Neuroticism)\",\n      description:\n        \"프로이트는 원래 정신적 고통, 정서적 고통, 정상적인 삶의 요구에 효과적으로 대처할 능력이 없는 상태를 묘사하기 위해 신경증 이라는 용어를 사용했습니다. 그는 모든 사람들이 신경증의 징후를 보이지만, 고통의 정도와 고통의 구체적인 증상이 다르다고 제안했습니다. 오늘날 신경증은 부정적인 감정을 경험하는 경향을 나타냅니다. 신경증에 대한 점수가 높은 사람은 주로 불안, 분노 또는 우울증과 같은 하나의 특정한 부정적인 감정을 경험할 수 있고 이러한 감정을 여러 번 경험할 수 있습니다. 신경증 적으로 높은 사람은 감정적으로 반응합니다. 그들은 대부분의 사람들에게 영향을 미치지 않는 사건에 정서적으로 반응하며, 그 반응은 통상적인 것보다 더 강렬한 경향이 있습니다. 그들은 평범한 상황을 위협적이라고 해석 할 가능성이 높으며, 좌절감이 절망적으로 느껴질 가능성이 더 큽니다. 그들의 부정적인 감정적 반응은 비정상적으로 오랜 기간 동안 지속되는 경향이 있는데, 이는 종종 그들이 기분이 좋지 않음을 의미합니다. 감정적인 규칙에 있는 이 문제는 명확하게 생각하고, 결정을 내리고, 스트레스에 효과적으로 대처할 수 있는 신경증적 능력을 감소시킬 수 있습니다.\\n\",\n      facets: [\n        {\n          name: \"불안(Anxiety)\",\n          description:\n            '불안한 개인에게는 \"싸움 또는 도주\" 시스템이 너무 자주 관여하게 됩니다. 따라서 불안이 심한 사람들은 자주 뭔가 위험한 일이 일어날 거라고 느낍니다. 그들은 특정 상황을 두려워하거나 일반적으로 두려워 할 수 있습니다. 그들은 긴장하고 불안감을 느끼고 불안해합니다. 불안이 적은 사람은 일반적으로 냉담하고 두려움이 없습니다.',\n        },\n        {\n          name: \"적대감(Anger)\",\n          description:\n            \"적대감에서 높은 점수를 얻은 사람은 상황이 나아지지 않을 때 격분합니다. 그들은 공정하게 대우받는 것에 대해 민감하며 속임수를 쓴다고 느끼면 화가 나고 씁쓸합니다. 이 척도는 화를 느끼는 경향을 측정합니다( 그 사람이 짜증과 적대감을 표현 하든 안하든 상관없이 그 사람의 수용성 수준에 달려있습니다). 점수가 낮은 사람은 자주 또는 쉽게 화를 내지 않습니다.\",\n        },\n        {\n          name: \"우울(Depression)\",\n          description:\n            \"이 척도는 슬픔, 낙담, 낙담하는 경향을 측정합니다. 높은 점수를 받은 사람은 에너지가 부족하고 활동을 시작하는데 어렵습니다. 낮은 득점 자들은 우울한 감정에서 자유로운 경향이 있습니다.\",\n        },\n        {\n          name: \"자의식(Self-Consciousness)\",\n          description:\n            \"자의식이 강한 개인은 다른 사람들이 생각하는 것에 민감합니다. 거부와 조롱에 대한 그들의 관심은 그들이 다른 사람들을 수줍어하고 불편하게 느끼게합니다. 그들은 쉽게 당황하고 종종 부끄러움을 느낍니다. 다른 사람들이 비판하거나 자신들을 놀리는 것에 대한 두려움은 과장되고 비현실적이지만, 어색함과 불편함 때문에 이러한 두려움은 스스로 실현 가능한 예언이 될 수 있습니다. 대조적으로 낮은 점수의 사람들은 다른 사람들이 자신을 잘못된 인상을 가지고 판단하거나 보는데 고통 받지 않습니다. 그들은 사회적 상황에서 긴장을 느끼지 않습니다.\",\n        },\n        {\n          name: \"충동성(Immoderation)\",\n          description:\n            \"충동적인 사람은 강한 갈망을 느끼고 이에 저항하는 데 어려움을 겪습니다. 그들은 장기적인 결과보다는 단기적인 쾌락과 보상을 지향하는 경향이 있습니다. 낮은 득점자는 강하고 저항 할 수 없는 갈망을 경험하지 않으며 결과적으로 과도하게 탐닉하지 않습니다. \",\n        },\n        {\n          name: \"스트레스 민감성(Vulnerability)\",\n          description:\n            \"스트레스 민감성에 대한 높은 점수 를받는 사람은 압박감이나 스트레스를 받을 때 공황, 혼란 및 무력감을 경험합니다. 낮은 점수를 받은 사람들은 스트레스를 받을 때 더 세세하고 자신감 있으며 명확한 사고를합니다.\",\n        },\n      ],\n    },\n    {\n      domain: \"개방성(Openness)\",\n      description:\n        \"경험에 대한 개방성은 상상력이 풍부하고 창조적인 사람들을 기존의 사람들과 구별하는 인지적 스타일의 차원을 나타냅니다. 열린 사람들은 지적으로 호기심이 많고 예술에 감사하며 아름다움에 민감합니다. 그들은 폐쇄된 사람들과 비교하여 자신의 감정을 더 잘 알고 있습니다. 그들은 개인주의적이고 관습에서 탈피한 방식으로 생각하고 행동하는 경향이 있습니다. 지식인은 일반적으로 경험에 대한 개방성에서 높은 점수를 받습니다. 따라서 이 요소는 문화 또는 지성 이라고도 불립니다. 그렇더라도, 지능은 아마도 경험에 대한 개방성의 최고의 측면으로 간주됩니다. 경험에 대한 개방성에 대한 점수는 표준형 지능 검사와 연간 학습과 관련됩니다.\\n개방된 인식 스타일의 또 다른 특징은 구체적인 경험에서 멀리 떨어진 상상과 추상을 사고 할 수 있는 기능입니다. 개인의 특정 지적 능력에 따라 이 상징적 인지는 수학적, 논리적 또는 기하학적 사고, 언어, 음악 작곡이나 연주의 예술적 또는 은유적 사용, 또는 많은 시각적 또는 공연 예술 중 하나의 형태를 취할 수 있습니다. 경험에 대한 개방성이 낮은 점수를 가진 사람들은 좁은 공통 관심사를 갖는 경향이 있습니다. 그들은 복잡하고 모호하며 섬세한 것보다는 평범하고 직설적이 것을 선호합니다. 그들은 예술이나 과학을 의심스럽게 생각할 수도 있습니다. 닫힌 사람들은 참신함보다 친숙함을 선호합니다. 그들은 보수적이고 변화에 저항력이 있습니다.\\n개방성은 심리학자에 의해 더 건강 해지거나 더 성숙 해지는 경우가 많으며, 심리학자들은 종종 이를 스스로 경험할 수 있습니다. 그러나 개방적이고 폐쇄된 사고 스타일은 각자 다른 환경에서 유용합니다. 개방된 사람의 지적 양식은 교수에게 도움이 될 수 있지만 연구 결과에 따르면 폐쇄적 사고는 경찰 업무, 판매 및 다양한 서비스 직종에서의 우수한 직무 수행과 관련되어 있음이 나타났습니다.\",\n      facets: [\n        {\n          name: \"상상(Imagination)\",\n          description:\n            \"상상력이 풍부한 사람들에게 현실 세계는 너무 밋밋하고 평범한 경우가 많습니다. 이 척도에서 높은 점수를 받는 사람들은 더 풍부하고 흥미로운 세상을 만드는 방법으로 판타지를 사용합니다. 이 항목에 낮은 점수의 사람들은 환상보다는 사실에 더 중점을 둡니다. \",\n        },\n        {\n          name: \"예술적 관심(Artistic Interests)\",\n          description:\n            \"이 척도에서 높은 득점 자들은 예술과 자연 모두에서 아름다움을 사랑합니다. 그들은 예술적 자연적 일에 쉽게 관여하고 몰입하게 됩니다. 비록 많은 사람들이 예술적인 훈련을 하거나 재능이 있다고 생각하지만 그것은 사실이 아닙니다. 이 영역의 특징은 자연 및 인공적인 아름다움에 대한 관심 과 감상입니다 . 낮은 득점 자에게는 예술에 대한 심미 감도와 관심이 부족합니다.\",\n        },\n        {\n          name: \"감성(Emotionality)\",\n          description:\n            \"감성 점수가 높은 사람은 자신의 감정에 대한 접근성과 인지력이 뛰어납니다. 낮은 득점자는 자신의 감정을 덜 인식하고 자신의 감정을 공개적으로 표현하지 않는 경향이 있습니다.\",\n        },\n        {\n          name: \"모험적(Adventurousness)\",\n          description:\n            \"모험심에 중점을 둔 고득점 자들은 새로운 활동을 시도하고, 외국 땅으로 여행하며, 다양한 경험을하기를 열망합니다. 그들은 친숙하고 일상적인 반복을 지루해 하고, 평소와 다르다는 이유로 새로운 길을 택할 것입니다. 낮은 득점자는 변화에 대해 불편함을 느끼고 친숙한 일상을 선호합니다.\",\n        },\n        {\n          name: \"지성(Intellect)\",\n          description:\n            \"지성과 예술적 관심은 경험에 대한 개방성에 있어 가장 중요한 두 가지 주요 측면입니다. 지성이 높은 득점자는 아이디어를 가지고 노는 것을 좋아합니다. 그들은 새롭고 특이한 아이디어에 개방되어 있으며 지적 문제를 토론하는 것을 좋아합니다. 그들은 수수께끼, 수수께끼 및 두뇌 고문을 즐깁니다. 지성 점수가 낮은 사람은 생각보다는 사람이나 물건을 선호합니다. 그들은 지적인 활동을 시간 낭비로 간주합니다. 지성은 지능과 동일시해서는 안 됩니다 . 지성는 지적 능력이 아닌 지적인 스타일이지만 지성에서 높은 점수인 사람은 표준화 된 지능 테스트에서 낮은 지성의 점수의 사람보다 보다 약간 높습니다. \",\n        },\n        {\n          name: \"자유주의 (Liberalism)\",\n          description:\n            \"심리적 자유주의는 권위, 협약 및 전통적 가치에 도전 할 준비가 되어 있음을 나타냅니다. 가장 극단적인 형태에서, 심리적 자유주의는 규칙에 대한 철저한 적대감, 율법 위반자에 대한 동정, 모호함, 혼란 및 무질서의 사랑을 나타낼 수도 있습니다. 심리적 보수 주의자들은 전통에 부합하는 안전과 안정성을 선호합니다. 심리적 자유주의와 보수주의는 정치적 성향과 일치하지 않지만 특정 정당에 대해서 개개인이 편향되는 경향이 있습니다. \",\n        },\n      ],\n    },\n  ]);\n\n  const generateRandomStat = () => {\n    return Math.floor(Math.random() * Math.floor(100));\n  };\n\n  const allocStatsToDomain = () => {\n    const domainList = [...domains];\n    domainList.forEach((domain, i) => {\n      domain.facets.forEach((facet, j) => {\n        domainList[i].facets[j][\"score\"] = generateRandomStat();\n      });\n    });\n    setDomains(domainList);\n  };\n\n  const generatePersonality = () => {\n    setIsGenerated(true);\n    allocStatsToDomain();\n  };\n\n  const bigFive = domains.map((item, index) => {\n    return <PersonalityDetail key={index} domain={item.domain} facets={item.facets} />;\n  });\n\n  return (\n    <Fragment>\n      <ButtonToAction\n        title=\"버튼을 누르면 새로운 캐릭터 프로필을 만들 수 있습니다\"\n        buttonText=\"생성하기\"\n        onClick={generatePersonality}\n        startIcon={<CheckCircleIcon />}\n        inputType=\"button\"\n      />\n      {isGenerated ? (\n        <Paper className={classes.contentBox} elevation={3}>\n          {bigFive}\n        </Paper>\n      ) : (\n        <div style={{ display: \"none\" }} />\n      )}\n    </Fragment>\n  );\n};\n\nexport default CharacterMaker;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\n\n//TODO: Improve response speed(loading screen), Fix TypeError\nfunction KakaoContent({ index, title, items }) {\n  const classes = useStyles();\n  const [components, setComponents] = useState(\n    items.map((element, index) => {\n      return <CircularProgress key={index} className={classes.loadingCircle} />;\n    })\n  );\n\n  const mounted = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      setComponents(\n        items.map((element, index) => {\n          const data = element[\"calcDataFunc\"]();\n          return element[\"createNodefunc\"](data, index);\n        })\n      );\n    }\n  }, [items]);\n\n  return (\n    <Paper className={classes.contentBox} elevation={3} key={index} ref={mounted}>\n      <Typography variant=\"h5\">{title}</Typography>\n      {components}\n    </Paper>\n  );\n}\n\nKakaoContent.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nexport default KakaoContent;\n","function LocalStorageCacher(md5Hash) {\n  const hashStr = md5Hash;\n\n  const generateName = function (name) {\n    return hashStr + \".\" + name;\n  };\n\n  const isCacheAvailable = function (func) {\n    const localName = generateName(func.name);\n    const rawData = localStorage.getItem(localName);\n    if (rawData === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const cacheData = function (func, data) {\n    const localName = generateName(func.name);\n    const stringfiedData = JSON.stringify(data);\n    localStorage.setItem(localName, stringfiedData);\n  };\n\n  const loadFromCache = function (func) {\n    const localName = generateName(func.name);\n    const rawData = localStorage.getItem(localName);\n\n    if (rawData === null) {\n      return null;\n    }\n\n    return JSON.parse(rawData);\n  };\n\n  return {\n    cacheData: cacheData,\n    loadFromCache: loadFromCache,\n    isCacheAvailable: isCacheAvailable,\n  };\n}\n\nexport default LocalStorageCacher;\n","import { generateHash } from \"util/generateHash.js\";\nimport LocalStorageCacher from \"util/LocalStorageCacher\";\n\nexport const LangEnum = Object.freeze({ ko: 0, en: 1, jp: 2 });\n\nconst KO_DATE_REGEX = /(?<=\\r?\\n)\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2}(?=,)/g;\nconst KO_NAME_REGEX = /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s)).+?(?=\\s:\\s)/g;\n// eslint-disable-next-line\nconst KO_CHATTING_REGEX = /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s.+\\s:\\s)).+/g;\nconst KO_CHATTING_AND_NAME_REGEX =\n  /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s))[\\s\\S]+?(?=\\r?\\n\\d{4}년)/g;\n\nconst KO_PHOTO_REGEX = /(\\s:\\s사진\\r?\\n)|(<사진 읽지 않음>)/g;\nconst KO_VIDEO_REGEX = /(\\s:\\s동영상\\r?\\n)|(<동영상 읽지 않음>)/g;\nconst KO_EMOJI_REGEX = /\\s:\\s이모티콘\\r?\\n/g;\nconst YOUTUBE_LINK_REGEX = /(https:\\/\\/youtu\\.be\\/.+)|(https:\\/\\/www\\.youtube\\.com\\/.+)/g;\n\n// TODO: refactor structure of class(too much overhead, trash readability)\nfunction KakaoChattingAnalyser(content) {\n  //Property\n  const md5Hash = generateHash(content);\n  const cache = LocalStorageCacher(md5Hash);\n  const script = content;\n  let parsedDates = null;\n  //Support Korean only for now\n  const lang =\n    /(?<=\\r?\\n)(저장한 날짜)\\s:\\s\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2}(?=\\r?\\n)/.test(script)\n      ? LangEnum.ko\n      : null;\n\n  //Private Method\n  const tryToLoadFromCache = function (func, ...args) {\n    if (cache.isCacheAvailable(func)) {\n      return cache.loadFromCache(func);\n    }\n    return func.apply(null, args);\n  };\n\n  const countMatchToRegex = function (str, regex) {\n    return ((str || \"\").match(regex) || []).length;\n  };\n\n  const calcTypingRanking = function () {\n    const chattingArray = script.match(KO_CHATTING_AND_NAME_REGEX);\n    let rankingMap = new Map();\n\n    for (let i = 0; i < chattingArray.length; i++) {\n      if (\n        /This message has been hidden by the chatroom managers\\./g.test(chattingArray[i]) ||\n        /님이 나갔습니다\\./g.test(chattingArray[i]) ||\n        /방장이 .+?님에서 .+?님으로 변경되었습니다.\\r?\\n.+?님은 참여자 관리와 채팅방 관리에 신경써주세요!/g.test(\n          chattingArray[i]\n        ) ||\n        /.+?이 들어왔습니다\\./g.test(chattingArray[i])\n      ) {\n        continue;\n      }\n\n      try {\n        const nickname = chattingArray[i].match(/^(.+?)(?=\\s:\\s)/gm)[0];\n        const chatting = chattingArray[i].match(/(?<=.+?\\s:\\s)[\\s\\S]+/g)[0];\n\n        if (rankingMap.has(nickname)) {\n          rankingMap.set(nickname, rankingMap.get(nickname) + chatting.length);\n        } else {\n          rankingMap.set(nickname, chatting.length);\n        }\n      } catch (e) {\n        console.error(e);\n        continue;\n      }\n    }\n\n    const arrForSort = Array.from(rankingMap);\n    arrForSort.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    return arrForSort;\n  };\n\n  const countDayFrequency = function () {\n    parsedDates = parseToDateArray(script);\n    const dayArray = [];\n    parsedDates.forEach((element) => {\n      const dayLabel = converToDayLabel(element.getDay());\n      dayArray.push(dayLabel);\n    });\n\n    return countFrequency(dayArray);\n  };\n\n  const countHourFreqeuncy = function () {\n    parsedDates = parseToDateArray(script);\n    const hourArray = [];\n    parsedDates.forEach((element) => {\n      const hourStr = String(element.getHours()) + \"시\";\n      hourArray.push(hourStr);\n    });\n\n    return countFrequency(hourArray);\n  };\n\n  const countNameFrequnecy = function () {\n    const nameArray = script.match(KO_NAME_REGEX);\n    return countFrequency(nameArray);\n  };\n\n  const parseToDateArray = function () {\n    const dateStrArray = script.match(KO_DATE_REGEX);\n    const dateArray = [];\n    const KO_YEAR_REGEX = /\\d{4}(?=년)/;\n    const KO_MONTH_REGEX = /\\d{1,2}(?=월)/;\n    const KO_DAY_REGEX = /\\d{1,2}(?=일)/;\n    const KO_TIME_REGEX = /(?<=((오전)|(오후))\\s)\\d{1,2}:\\d{1,2}/;\n\n    dateStrArray.forEach((element) => {\n      const year = parseInt(element.match(KO_YEAR_REGEX));\n      const month = parseInt(element.match(KO_MONTH_REGEX));\n      const day = parseInt(element.match(KO_DAY_REGEX));\n      const timeStrArray = element.match(KO_TIME_REGEX)[0].split(\":\");\n      let hour = parseInt(timeStrArray[0]);\n      const minute = parseInt(timeStrArray[1]);\n      const isAfternoon = new RegExp(\"(오후)\").test(element);\n\n      if (isAfternoon) {\n        hour += 12;\n      }\n\n      dateArray.push(new Date(year, month - 1, day, hour, minute));\n    });\n\n    parsedDates = dateArray;\n\n    return parsedDates;\n  };\n\n  const countFrequency = function (arr) {\n    let map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n      if (map.has(arr[i])) {\n        map.set(arr[i], map.get(arr[i]) + 1);\n      } else {\n        map.set(arr[i], 1);\n      }\n    }\n\n    const arrForSort = Array.from(map);\n    arrForSort.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    return arrForSort;\n  };\n\n  const converToDayLabel = function (day) {\n    const week = [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"];\n    const dayLabel = week[day];\n    return dayLabel;\n  };\n\n  return {\n    getMd5Hash: () => {\n      return md5Hash;\n    },\n\n    getLanguage: () => {\n      return lang;\n    },\n\n    getScript: () => {\n      return script;\n    },\n\n    calcBeginDate: () => {\n      return tryToLoadFromCache(parseToDateArray)[0];\n    },\n\n    calcEndDate: () => {\n      const datesArray = tryToLoadFromCache(parseToDateArray);\n      return datesArray[datesArray.length - 1];\n    },\n\n    calcNumOfLines: () => {\n      return tryToLoadFromCache(parseToDateArray).length;\n    },\n\n    calcNameFrequency: function () {\n      return tryToLoadFromCache(countNameFrequnecy);\n    },\n\n    calcDayFrequency: function () {\n      return tryToLoadFromCache(countDayFrequency);\n    },\n\n    calcHourFrequency: function () {\n      return tryToLoadFromCache(countHourFreqeuncy);\n    },\n\n    calcPhotoFrequency: function () {\n      return countMatchToRegex(script, KO_PHOTO_REGEX);\n    },\n\n    calcVideoFrequency: function () {\n      return countMatchToRegex(script, KO_VIDEO_REGEX);\n    },\n\n    calcEmojiFrequency: function () {\n      return countMatchToRegex(script, KO_EMOJI_REGEX);\n    },\n\n    calcYoutubeFrequency: function () {\n      return countMatchToRegex(script, YOUTUBE_LINK_REGEX);\n    },\n\n    calcTypingRanking: function () {\n      return tryToLoadFromCache(calcTypingRanking, script);\n    },\n  };\n}\n\nexport default KakaoChattingAnalyser;\n","export function generateHash(object){\n  const hash = require('object-hash');\n  return hash(object);\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Description(props) {\n  return <h4>{props.text}</h4>;\n}\n\nDescription.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Description;\n","function generateRandomRGB() {\n  const getRandomInt = function (max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const red = getRandomInt(256);\n  const green = getRandomInt(256);\n  const blue = getRandomInt(256);\n\n  return \"rgba(\" + red.toString() + \", \" + green.toString() + \", \" + blue.toString() + \", \";\n}\n\nfunction generateChartColor(array) {\n  const colors = { backgroundColor: [], borderColor: [] };\n\n  array.data.forEach((element) => {\n    const rgb = generateRandomRGB();\n    colors.backgroundColor.push(rgb + \"0.6)\");\n    colors.borderColor.push(rgb + \"1)\");\n  });\n\n  return colors;\n}\n\nexport default generateChartColor;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\nimport generateChartColor from \"util/generateChartColor\";\n\nfunction BarChart(props) {\n  const classes = useStyles();\n\n  const chartData = {\n    labels: props.data.map((element) => element[0]).slice(0, 7),\n    datasets: [\n      {\n        label: \"채팅 수\",\n        data: props.data.map((element) => element[1]).slice(0, 7),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      x: {\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0.0)\",\n        },\n      },\n      y: {\n        grid: {\n          drawBorder: false,\n          color: \"rgba(255, 255, 255, 0.1)\",\n        },\n      },\n    },\n  };\n\n  const legend = {};\n\n  const colors = generateChartColor(chartData.datasets[0]);\n\n  chartData.datasets[0][\"backgroundColor\"] = colors.backgroundColor;\n  chartData.datasets[0][\"borderColor\"] = colors.borderColor;\n\n  return (\n    <Paper className={classes.chartContainer} elevation={2}>\n      <Bar data={chartData} options={options} legend={legend} />\n    </Paper>\n  );\n}\n\nBarChart.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default BarChart;\n","import React from \"react\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from 'prop-types';\n\n\nfunction Ranking(props) {\n  const classes = useStyles();\n  const list = props.data;\n\n  const sumOfItems = list.reduce((acc, value) => acc + value[1], 0);\n  const largestNum = list[0][1];\n  const liTags = list.map((element, index) => {\n    const percent = Math.round((element[1] / sumOfItems) * 10000) / 100;\n    const textContent = String(element[0]) + \" (\" + String(percent) + \"%)\";\n    const width = String((element[1] * 100) / largestNum) + \"%\";\n    return (\n      <li key={index} style={{ width: width }}>\n        {String(index) + '. ' + textContent}\n      </li>\n    );\n  });\n\n  return <ol className={classes.rankingList}>{liTags}</ol>;\n}\n\nRanking.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default Ranking;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\nimport PropTypes from \"prop-types\";\n\nfunction InnnerGrid(props) {\n  const classes = useStyles();\n\n  const cellList = props.cells.map((element, index) => {\n    return (\n      <Paper key={index} elevation={1}>\n        <h4>{element.title}</h4>\n        <h5>{element.text}</h5>\n      </Paper>\n    );\n  });\n\n  return <div className={classes.innerGrid}>{cellList}</div>;\n}\n\nInnnerGrid.propTypes = {\n  cells: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default InnnerGrid;\n","import React, { Fragment, useState } from \"react\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport ButtonToAction from \"components/ButtonToAction.js\";\nimport KakaoContent from \"components/KakaoContent.js\";\nimport KakaoChattingAnalyser from \"util/KakaoChattingAnalyser.js\";\nimport Description from \"components/kakao_contents/Description\";\nimport BarChart from \"components/kakao_contents/BarChart\";\nimport Ranking from \"components/kakao_contents/Ranking\";\nimport InnnerGrid from \"components/kakao_contents/InnnerGrid\";\nimport useStyles from \"asset/style/style\";\n\n// TODO: Add Loading Effect(With useEffect)\nfunction KakaoAnalyser(props) {\n  const classes = useStyles();\n  const [contents, setContents] = useState([]);\n  const [uploaded, setUploaded] = useState(true);\n\n  const createDescription = function (text, key) {\n    return <Description key={key} text={text}></Description>;\n  };\n\n  const createBarChart = function (data, key) {\n    return <BarChart key={key} data={data}></BarChart>;\n  };\n\n  const createRanking = function (data, key) {\n    return <Ranking key={key} data={data} />;\n  };\n\n  const createInnnerGrid = function (cells, key) {\n    return <InnnerGrid key={key} cells={cells}></InnnerGrid>;\n  };\n\n  const uploadEvent = function (e) {\n    const file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const fileContent = e.target.result;\n      setUploaded(false);\n      const chattingAnalyser = KakaoChattingAnalyser(fileContent);\n      setContents([\n        {\n          title: \"해쉬 코드\",\n          items: [{ createNodefunc: createDescription, calcDataFunc: chattingAnalyser.getMd5Hash }],\n        },\n        {\n          title: \"집계 기간\",\n          items: [\n            {\n              createNodefunc: createDescription,\n              calcDataFunc: () => {\n                const beginDate = chattingAnalyser.calcBeginDate();\n                const endDate = chattingAnalyser.calcEndDate();\n\n                const convertDate = function (date) {\n                  const year = String(date.getFullYear()) + \"년\";\n                  const month = String(date.getMonth() + 1) + \"월\";\n                  const day = String(date.getDate()) + \"일\";\n\n                  return year + \" \" + month + \" \" + day;\n                };\n\n                return convertDate(beginDate) + \" ~ \" + convertDate(endDate);\n              },\n            },\n          ],\n        },\n        {\n          title: \"채팅 수 & 하루 평균 채팅 수\",\n          items: [\n            {\n              createNodefunc: createInnnerGrid,\n              calcDataFunc: () => {\n                const beginDate = chattingAnalyser.calcBeginDate();\n                const endDate = chattingAnalyser.calcEndDate();\n                const numOfLines = chattingAnalyser.calcNumOfLines();\n\n                const gapTime = endDate.getTime() - beginDate.getTime();\n                const gapDay = Math.floor(gapTime / (1000 * 60 * 60 * 24));\n\n                return [\n                  { title: \"채팅 수\", text: String(numOfLines) },\n                  { title: \"하루 평균 채팅 수\", text: String(Math.floor(numOfLines / gapDay)) },\n                ];\n              },\n            },\n          ],\n        },\n        {\n          title: \"사진, 동영상, 이모티콘, 유튜브 링크 수\",\n          items: [\n            {\n              createNodefunc: createInnnerGrid,\n              calcDataFunc: () => {\n                return [\n                  { title: \"사진\", text: chattingAnalyser.calcPhotoFrequency() },\n                  { title: \"동영상\", text: chattingAnalyser.calcVideoFrequency() },\n                  { title: \"이모티콘\", text: chattingAnalyser.calcEmojiFrequency() },\n                  { title: \"유튜브 링크 수\", text: chattingAnalyser.calcYoutubeFrequency() },\n                ];\n              },\n            },\n          ],\n        },\n        {\n          title: \"채팅방에서 말을 가장 많이 한 사람\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcNameFrequency },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcNameFrequency },\n          ],\n        },\n        {\n          title: \"채팅방에서 타이핑한 글자수\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcTypingRanking },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcTypingRanking },\n          ],\n        },\n        {\n          title: \"가장 활발한 시간대\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcHourFrequency },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcHourFrequency },\n          ],\n        },\n        {\n          title: \"가장 활발한 요일\",\n          items: [\n            { createNodefunc: createBarChart, calcDataFunc: chattingAnalyser.calcDayFrequency },\n            { createNodefunc: createRanking, calcDataFunc: chattingAnalyser.calcDayFrequency },\n          ],\n        },\n      ]);\n    };\n    reader.readAsText(file);\n  };\n\n  const components = contents.map((element, index) => {\n    return (\n      <KakaoContent\n        key={index}\n        className={classes.contentBox}\n        title={element.title}\n        items={element.items}\n      ></KakaoContent>\n    );\n  });\n\n  return (\n    <Fragment>\n      {uploaded ? (\n        <ButtonToAction\n          title=\"카카오톡 대화 내보내기 기능을 사용해서 파일을 업로드 해 주세요\"\n          buttonText=\"업로드\"\n          onChange={uploadEvent}\n          startIcon={<CloudUploadIcon />}\n          inputType=\"file\"\n        />\n      ) : (\n        components\n      )}\n    </Fragment>\n  );\n}\n\nexport default KakaoAnalyser;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport SpeakerNotesIcon from \"@material-ui/icons/SpeakerNotes\";\nimport { Link } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem button component={Link} to=\"/\">\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"홈\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/portfolio\">\n          <ListItemIcon>\n            <PortraitIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"개발 포트폴리오\" />\n        </ListItem>\n        <Divider />\n        <ListItem button component={Link} to=\"/kakao-analyser\">\n          <ListItemIcon>\n            <SpeakerNotesIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"카카오톡 분석기\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/character-maker\">\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"캐릭터 성격 생성기\" />\n        </ListItem>\n      </List>\n      \n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} id='menu-wrapper'><MenuIcon fontSize='large'/></Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import \"asset/style/menu.css\";\nimport \"asset/style/font.css\";\nimport { defaults } from \"react-chartjs-2\";\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Home, Portfolio, KakaoAnalyser, CharacterMaker } from \"pages\";\nimport Menu from \"components/Menu\";\nimport useStyles from \"asset/style/style\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction App() {\n  const classes = useStyles();\n  defaults.font.size = \"16\";\n  defaults.color = \"#fff\";\n  defaults.plugins.tooltip.displayColors = false;\n\n  /*eslint-disable */\n  return (\n    <Paper elevation={3} className={classes.Container}>\n      <Menu></Menu>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/portfolio\" component={Portfolio} />\n      <Route path=\"/kakao-analyser\" component={KakaoAnalyser} />\n      <Route path=\"/character-maker\" component={CharacterMaker} />\n      <footer>\n        <p>\n          Made by&nbsp;\n          <a href=\"https://bustermachinelab.net/\" className={classes.link} target=\"_blank\" rel=\"author\">\n            BK927\n          </a>\n        </p>\n      </footer>\n    </Paper>\n  );\n}\n\nexport default App;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport App from \"App\";\n\n//TODO: Add responsive style\nfunction Root() {\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        light: \"#ff7961\",\n        main: \"#f44336\",\n        dark: \"#ba000d\",\n      },\n      secondary: {\n        light: \"#8561c5\",\n        main: \"#673ab7\",\n        dark: \"#482880\",\n      },\n      background: {\n        paper: \"#1F1F1F\",\n        default: \"#121212\",\n        dp01: \"#1F1F1F\",\n        dp02: \"#2C2C2C\",\n        dp03: \"#383838\",\n        dp04: \"#454545\",\n        dp05: \"#525252\",\n        dp06: \"#5F5F5F\",\n        dp07: \"#6B6B6B\",\n        dp08: \"#B3B3B3\",\n      },\n      text: {\n        highEmphasis: \"#F2F2F2\",\n        midiumEmphasis: \"#E6E6E6\",\n      },\n    },\n    typography: {\n      fontFamily: \"Noto Sans KR, Roboto, sans-serif\",\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          html: {\n            WebkitFontSmoothing: \"auto\",\n            display: \"grid\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            margin: \"0\",\n          },\n          body: {\n            display: \"grid\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            margin: \"0\",\n          },\n          footer: {\n            display: \"block\",\n            textAlign: \"center\",\n            fontSize: \"1.4rem\",\n            fontWeight: \"500\",\n          },\n        },\n      },\n    },\n  });\n\n  return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter basename=\"/\">\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n  );\n}\n\nexport default Root;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'Root'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}