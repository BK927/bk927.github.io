{"version":3,"sources":["asset/style/style.js","components/ShowcaseCard.js","pages/Home.js","pages/Portfolio.js","pages/CharacterMaker.js","components/FileUpload.js","components/KakaoContent.js","models/chatting_analyser.js","models/md5hash.js","components/kakao_contents/Description.js","components/kakao_contents/BarChart.js","components/kakao_contents/Ranking.js","components/kakao_contents/InnnerGrid.js","pages/KakaoAnalyser.js","components/Menu.js","App.js","Root.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","Container","borderRadius","maxWidth","minWidth","marginTop","spacing","marginBottom","marginLeft","marginRight","padding","backgroundColor","palette","background","dp02","filebox","textAlign","width","display","justifyContent","flexDirection","height","margin","overflow","alignItems","fontSize","transition","contentBox","position","boxSizing","innerGrid","flexBasis","gap","alignContent","dp03","flex","link","color","secondary","main","textDecoration","fontWeight","light","transitions","create","duration","complex","easing","easeOut","uploadButton","primary","text","cardTitle","cardPost","cardGrid","gridTemplateColumns","chartContainer","rankingList","listStyleType","whiteSpace","dp08","ShowcaseCard","props","classes","Card","CardContent","Typography","variant","component","title","className","category","body","CardActions","Button","Link","to","size","action","Home","useState","cards","cardsComponent","map","element","index","String","Portfolio","Paper","elevation","CharacterMaker","FileUpload","Box","accept","style","id","type","onChange","uploadEvent","htmlFor","startIcon","KakaoContent","components","items","value","LangEnum","Object","freeze","ko","en","jp","KO_DATE_REGEX","KO_NAME_REGEX","KO_CHATTING_AND_NAME_REGEX","KO_PHOTO_REGEX","KO_VIDEO_REGEX","KO_EMOJI_REGEX","YOUTUBE_LINK_REGEX","createChattingAnalyser","content","object","md5Hash","require","hash","script","parsedDates","lang","test","countMatchToRegex","str","regex","match","length","parseToDateArray","dateStrArray","dateArray","KO_YEAR_REGEX","KO_MONTH_REGEX","KO_DAY_REGEX","KO_TIME_REGEX","forEach","year","parseInt","month","day","timeStrArray","split","hour","minute","RegExp","push","Date","countFrequency","arr","Map","i","has","set","get","arrForSort","Array","from","sort","first","second","converToDayLabel","getMd5Hash","getLanguage","getScript","calcBeginDate","calcEndDate","datesArray","calcNumOfLines","calcNameFrequency","nameArray","countNameFrequnecy","calcDayFrequency","dayArray","dayLabel","getDay","countDayFrequency","calcHourFrequency","hourArray","getHours","countHourFreqeuncy","calcPhotoFrequency","calcVideoFrequency","calcEmojiFrequency","calcYoutubeFrequency","calcTypingRanking","chattingArray","rankingMap","nickname","chatting","e","console","error","Description","this","React","Component","BarChart","chartData","labels","data","slice","datasets","label","borderWidth","borderColor","rgb","getRandomInt","max","Math","floor","random","red","green","blue","toString","generateRandomRGB","options","maintainAspectRatio","responsive","scales","xAxes","ticks","fontColor","gridLines","lineWidth","yAxes","beginAtZero","legend","Ranking","list","sumOfItems","reduce","acc","largestNum","liTags","percent","round","textContent","InnnerGrid","cellList","cells","KakaoAnalyser","contents","setContents","uploaded","setUploaded","createDescription","createBarChart","createRanking","createInnnerGrid","file","target","files","reader","FileReader","onload","fileContent","result","chattingAnalyser","beginDate","endDate","convertDate","date","getFullYear","getMonth","getDate","numOfLines","gapTime","getTime","gapDay","readAsText","fullList","SwipeableTemporaryDrawer","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","key","clsx","role","onClick","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","Divider","Fragment","SwipeableDrawer","onClose","onOpen","App","exact","path","href","rel","Root","createMuiTheme","dark","paper","default","dp01","dp04","dp05","dp06","dp07","highEmphasis","midiumEmphasis","typography","fontFamily","overrides","MuiCssBaseline","html","WebkitFontSmoothing","footer","ThemeProvider","CssBaseline","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52051d50.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    borderRadius: \"10px\",\n    maxWidth: \"1400px\",\n    minWidth: \"30vw\",\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: theme.spacing(4),\n    \"& > .MuiPaper-root\": {\n      backgroundColor: theme.palette.background.dp02,\n    },\n  },\n  filebox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"auto\",\n    margin: \"30px auto 30px auto\",\n    overflow: \"auto\",\n    \"& > .MuiBox-root\": {\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      margin: \"0 auto\",\n      borderRadius: \"0.25em\",\n      fontSize: \"1.5rem\",\n      transition: \"all 0.3s ease-out\",\n    },\n  },\n  contentBox: {\n    position: \"relative\",\n    display: \"block\",\n    boxSizing: \"content-box\",\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    height: \"max-content\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: theme.spacing(2),\n    \"& h3\": {\n      display: \"block\",\n      marginBottom: \"1.8rem\",\n    },\n  },\n  innerGrid: {\n    display: \"flex\",\n    flexBasis: \"0\",\n    gap: theme.spacing(2),\n    alignContent: \"space-between\",\n    \"& > div\": {\n      backgroundColor: theme.palette.background.dp03,\n      borderRadius: \"5px\",\n      padding: \"8px 15px\",\n      flex: \"1\",\n    },\n    \"& > div > h4\": {\n      display: \"block\",\n      marginBottom: \"15px\",\n    },\n  },\n  link: {\n    color: theme.palette.secondary.main,\n    textDecoration: \"none\",\n    fontWeight: \"700\",\n    \"&:hover\": {\n      color: theme.palette.secondary.light,\n    },\n    transition: theme.transitions.create([\"all\"], {\n      duration: theme.transitions.duration.complex,\n      easing: theme.transitions.easing.easeOut,\n    }),\n  },\n  uploadButton: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      padding: theme.spacing(1.6),\n      fontWeight: \"600\",\n      fontSize: \"1.2rem\",\n    },\n  },\n  cardTitle: {\n    fontSize: 14,\n  },\n  cardPost: {\n    marginBottom: 12,\n  },\n  cardGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    \"& > .MuiPaper-root\": {\n      margin: theme.spacing(2),\n      minWidth: 275,\n      backgroundColor: theme.palette.background.dp02,\n    },\n  },\n  chartContainer: {\n    backgroundColor: theme.palette.background.dp03,\n    position: \"relative\",\n    margin: \"0 auto\",\n    padding: theme.spacing(1),\n    height: theme.spacing(50),\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    \"& * \": {\n      transition: \"none\",\n    },\n  },\n  rankingList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"flex-start\",\n    width: \"100%\",\n    padding: 0,\n    listStyleType: \"none\",\n    \"& li\": {\n      backgroundColor: theme.palette.background.dp03,\n      padding: theme.spacing(2),\n      margin: \"0.3rem 0\",\n      overflow: \"visible\",\n      whiteSpace: \"nowrap\",\n      transition: theme.transitions.create([\"all\"], {\n        duration: theme.transitions.duration.complex,\n        easing: theme.transitions.easing.easeOut,\n      }),\n    },\n    \"& li:hover\": {\n      backgroundColor: theme.palette.background.dp08,\n    },\n  },\n}));\n\nexport default useStyles;\n","import { Link } from \"react-router-dom\";\nimport useStyles from \"asset/style/style\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction ShowcaseCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.title}\n        </Typography>\n        <Typography className={classes.cardPost} color=\"textSecondary\">\n          {props.category}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {props.body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button component={Link} to={props.to} size=\"small\">\n          {props.action}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default ShowcaseCard;\n","import React, { useState } from \"react\";\nimport useStyles from \"asset/style/style\";\nimport ShowcaseCard from \"components/ShowcaseCard\";\n\nconst Home = () => {\n  const classes = useStyles();\n  // eslint-disable-next-line\n  const [cards, setCards] = useState([\n    {\n      title: \"개발 포트폴리오\",\n      category: \"포트폴리오\",\n      body: \"저에 대한 자기소개입니다. 보유한 기술 스택과, 경력 등에 대해서 알 수 있습니다.\",\n      action: \"더보기\",\n      to: \"/portfolio\",\n    },\n    {\n        title: \"카카오톡 분석기\",\n        category: \"유틸리티\",\n        body: \"단체 채팅방에서 오고 간 대화를 분석할 수 있는 툴입니다.\",\n        action: \"사용하기\",\n        to: \"/kakao-analyser\",\n      },\n      {\n        title: \"캐릭터 성격 분석기\",\n        category: \"유틸리티\",\n        body: \"웹소설, 드라마, 영화 등을 만드는데 도움될 수 있는 캐릭터 성격 생성기입니다. 가장 권위 있는 심리검사 빅파이브를 기반으로 다양한 틀을 기반으로 캐릭터 성격을 구상하는데 도움을 줍니다.\",\n        action: \"사용하기\",\n        to: \"/character-maker\",\n      },\n  ]);\n  const cardsComponent = cards.map((element, index) => {\n    return (\n      <ShowcaseCard\n        key={\"card\" + String(index)}\n        title={element.title}\n        category={element.category}\n        body={element.body}\n        action={element.action}\n        to={element.to}\n      ></ShowcaseCard>\n    );\n  });\n  return (\n    <div className={classes.cardGrid}>\n      {cardsComponent}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\n\nconst Portfolio = () => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <h2>포트폴리오</h2>{\" \"}\n      <Paper className={classes.contentBox} elevation={3}>\n        <h4>작성 중</h4>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default Portfolio;\n","import React, { Fragment } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\n\nconst CharacterMaker = () => {\n    const classes = useStyles();\n    return (\n        <Fragment>\n        <h2>캐릭터 메이커</h2>{\" \"}\n        <Paper className={classes.contentBox} elevation={3}>\n          <h4>제작 중</h4>\n        </Paper>\n      </Fragment>\n    );\n};\n\nexport default CharacterMaker;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { Box } from \"@material-ui/core\";\nimport useStyles from \"asset/style/style\";\n\n\n\nfunction FileUpload(props) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.filebox}>\n      <h1>카카오톡 대화 내보내기 기능을 사용해서 파일을 업로드 해 주세요</h1>\n      <Box>\n        <input\n          accept=\".txt\"\n          style={{ display: \"none\" }}\n          id=\"upload-button\"\n          type=\"file\"\n          onChange={props.uploadEvent}\n        />\n        <label htmlFor=\"upload-button\">\n          <Button\n            startIcon={<CloudUploadIcon />}\n            className={classes.uploadButton}\n            component=\"span\">\n            업로드\n          </Button>\n        </label>\n      </Box>\n    </Box>\n  );\n}\n\nexport default FileUpload;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"asset/style/style\";\n\nfunction KakaoContent(props) {\n  const classes = useStyles();\n  const state = {\n    items: props.items,\n  };\n\n  const components = state.items.map((element, index) => {\n    const value = element[1]();\n    return element[0](value);\n  });\n  return (\n    <Paper className={classes.contentBox} elevation={3} key={props.index}>\n      <h3>{props.title}</h3>\n      {components}\n    </Paper>\n  );\n}\n\nexport default KakaoContent;\n","import { generateHash } from \"models/md5hash.js\";\n\nexport const LangEnum = Object.freeze({ ko: 0, en: 1, jp: 2 });\n\nconst KO_DATE_REGEX = /(?<=\\r?\\n)\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2}(?=,)/g;\nconst KO_NAME_REGEX = /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s)).+?(?=\\s:\\s)/g;\n// eslint-disable-next-line\nconst KO_CHATTING_REGEX = /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s.+\\s:\\s)).+/g;\nconst KO_CHATTING_AND_NAME_REGEX =\n  /(?<=(\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2},\\s))[\\s\\S]+?(?=\\r?\\n\\d{4}년)/g;\n\nconst KO_PHOTO_REGEX = /(\\s:\\s사진\\r?\\n)|(<사진 읽지 않음>)/g;\nconst KO_VIDEO_REGEX = /(\\s:\\s동영상\\r?\\n)|(<동영상 읽지 않음>)/g;\nconst KO_EMOJI_REGEX = /\\s:\\s이모티콘\\r?\\n/g;\nconst YOUTUBE_LINK_REGEX = /(https:\\/\\/youtu\\.be\\/.+)|(https:\\/\\/www\\.youtube\\.com\\/.+)/g;\n\nfunction createChattingAnalyser(content) {\n  //Property\n  const md5Hash = generateHash(content);\n  const script = content;\n  let parsedDates = null;\n  //Support Korean only for now\n  const lang =\n    /(?<=\\r?\\n)(저장한 날짜)\\s:\\s\\d{4}년\\s\\d{1,2}월\\s\\d{1,2}일\\s((오전)|(오후))\\s\\d{1,2}:\\d{1,2}(?=\\r?\\n)/.test(script)\n      ? LangEnum.ko\n      : null;\n\n      \n  //Private Method\n  const countMatchToRegex = function (str, regex) {\n    return ((str || \"\").match(regex) || []).length;\n  };\n\n  const calcTypingRanking = function () {\n    const chattingArray = script.match(KO_CHATTING_AND_NAME_REGEX);\n    let rankingMap = new Map();\n\n    for (let i = 0; i < chattingArray.length; i++) {\n      if (\n        /This message has been hidden by the chatroom managers\\./g.test(chattingArray[i]) ||\n        /님이 나갔습니다\\./g.test(chattingArray[i]) ||\n        /방장이 .+?님에서 .+?님으로 변경되었습니다.\\r?\\n.+?님은 참여자 관리와 채팅방 관리에 신경써주세요!/g.test(\n          chattingArray[i]\n        ) ||\n        /.+?이 들어왔습니다\\./g.test(chattingArray[i])\n      ) {\n        continue;\n      }\n\n      try {\n        const nickname = chattingArray[i].match(/^(.+?)(?=\\s:\\s)/gm)[0];\n        const chatting = chattingArray[i].match(/(?<=.+?\\s:\\s)[\\s\\S]+/g)[0];\n\n        if (rankingMap.has(nickname)) {\n          rankingMap.set(nickname, rankingMap.get(nickname) + chatting.length);\n        } else {\n          rankingMap.set(nickname, chatting.length);\n        }\n      } catch (e) {\n        console.error(e);\n        continue;\n      }\n    }\n\n    const arrForSort = Array.from(rankingMap);\n    arrForSort.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    return arrForSort;\n  };\n\n  const countDayFrequency = function () {\n    parsedDates = parseToDateArray(script);\n    const dayArray = [];\n    parsedDates.forEach((element) => {\n      const dayLabel = converToDayLabel(element.getDay());\n      dayArray.push(dayLabel);\n    });\n\n    return countFrequency(dayArray);\n  };\n\n  const countHourFreqeuncy = function () {\n    parsedDates = parseToDateArray(script);\n    const hourArray = [];\n    parsedDates.forEach((element) => {\n      hourArray.push(element.getHours());\n    });\n\n    return countFrequency(hourArray);\n  };\n\n  const countNameFrequnecy = function (){\n    const nameArray = script.match(KO_NAME_REGEX);\n    return countFrequency(nameArray);\n  };\n\n  const parseToDateArray = function () {\n    const dateStrArray = script.match(KO_DATE_REGEX);\n    const dateArray = [];\n    const KO_YEAR_REGEX = /\\d{4}(?=년)/;\n    const KO_MONTH_REGEX = /\\d{1,2}(?=월)/;\n    const KO_DAY_REGEX = /\\d{1,2}(?=일)/;\n    const KO_TIME_REGEX = /(?<=((오전)|(오후))\\s)\\d{1,2}:\\d{1,2}/;\n\n    dateStrArray.forEach((element) => {\n      const year = parseInt(element.match(KO_YEAR_REGEX));\n      const month = parseInt(element.match(KO_MONTH_REGEX));\n      const day = parseInt(element.match(KO_DAY_REGEX));\n      const timeStrArray = element.match(KO_TIME_REGEX)[0].split(\":\");\n      let hour = parseInt(timeStrArray[0]);\n      const minute = parseInt(timeStrArray[1]);\n      const isAfternoon = new RegExp(\"(오후)\").test(element);\n\n      if (isAfternoon) {\n        hour += 12;\n      }\n\n      dateArray.push(new Date(year, month - 1, day, hour, minute));\n    });\n\n    parsedDates = dateArray;\n\n    return parsedDates;\n  };\n\n  const countFrequency = function (arr) {\n    let map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n      if (map.has(arr[i])) {\n        map.set(arr[i], map.get(arr[i]) + 1);\n      } else {\n        map.set(arr[i], 1);\n      }\n    }\n\n    const arrForSort = Array.from(map);\n    arrForSort.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    return arrForSort;\n  };\n\n  const converToDayLabel = function (day) {\n    const week = [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"];\n    const dayLabel = week[day];\n    return dayLabel;\n  };\n\n  return {\n    getMd5Hash: () => {\n      return md5Hash;\n    },\n\n    getLanguage: () => {\n      return lang;\n    },\n\n    getScript: () => {\n      return script;\n    },\n\n    calcBeginDate: () => {\n      return parseToDateArray()[0];\n    },\n\n    calcEndDate: () => {\n      const datesArray = parseToDateArray();\n      return datesArray[datesArray.length - 1];\n    },\n\n    calcNumOfLines: () => {\n      return parseToDateArray().length;\n    },\n\n    calcNameFrequency: function () {\n      return countNameFrequnecy();\n    },\n\n    calcDayFrequency: function () {\n      return countDayFrequency();\n    },\n\n    calcHourFrequency: function () {\n      return countHourFreqeuncy();\n    },\n\n    calcPhotoFrequency: function () {\n      return countMatchToRegex(script, KO_PHOTO_REGEX);\n    },\n\n    calcVideoFrequency: function () {\n      return countMatchToRegex(script, KO_VIDEO_REGEX);\n    },\n\n    calcEmojiFrequency: function () {\n      return countMatchToRegex(script, KO_EMOJI_REGEX);\n    },\n\n    calcYoutubeFrequency: function () {\n      return countMatchToRegex(script, YOUTUBE_LINK_REGEX);\n    },\n\n    calcTypingRanking: function () {\n      return calcTypingRanking(script);\n    },\n  };\n}\n\nexport default createChattingAnalyser;\n","export function generateHash(object){\n  const hash = require('object-hash');\n  return hash(object);\n}","import React from \"react\";\n\nclass Description extends React.Component{\n\nrender(){\n  return(\n    <h4>\n      {this.props.text}\n    </h4>\n  );\n}\n}\n\nexport default Description;","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport useStyles from \"asset/style/style\";\n\nfunction BarChart(props) {\n  const classes = useStyles();\n\n  const chartData = {\n    labels: props.data.map((element) => element[0]).slice(0, 7),\n    datasets: [\n      {\n        label: \"채팅 수\",\n        data: props.data.map((element) => element[1]).slice(0, 7),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 18,\n          },\n          gridLines: {\n            color: \"rgba(255, 255, 255, 0.11)\",\n            lineWidth: 3,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            fontColor: \"white\",\n            fontSize: 18,\n          },\n          gridLines: {\n            color: \"rgba(255, 255, 255, 0.11)\",\n            lineWidth: 3,\n          },\n        },\n      ],\n    },\n  };\n\n  const legend = {\n      labels: {\n        fontColor: \"white\",\n      },\n  };\n\n  function generateRandomRGB() {\n    const getRandomInt = function (max) {\n      return Math.floor(Math.random() * Math.floor(max));\n    };\n\n    const red = getRandomInt(256);\n    const green = getRandomInt(256);\n    const blue = getRandomInt(256);\n\n    return \"rgba(\" + red.toString() + \", \" + green.toString() + \", \" + blue.toString() + \", \";\n  }\n\n  const backgroundColor = [];\n  const borderColor = [];\n\n  chartData.datasets[0].data.forEach((element) => {\n    const rgb = generateRandomRGB();\n    backgroundColor.push(rgb + \"0.6)\");\n    borderColor.push(rgb + \"1)\");\n  });\n\n  chartData.datasets[0][\"backgroundColor\"] = backgroundColor;\n  chartData.datasets[0][\"borderColor\"] = borderColor;\n\n  return (\n    <div className={classes.chartContainer}>\n      <Bar data={chartData} options={options} legend={legend} />\n    </div>\n  );\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport useStyles from \"asset/style/style\";\n\nfunction Ranking(props) {\n  const classes = useStyles();\n  const list = props.data;\n\n  const sumOfItems = list.reduce((acc, value) => acc + value[1], 0);\n  const largestNum = list[0][1];\n  const liTags = list.map((element, index) => {\n    const percent = Math.round((element[1] / sumOfItems) * 10000) / 100;\n    const textContent = String(element[0]) + \" (\" + String(percent) + \"%)\";\n    const width = String((element[1] * 100) / largestNum) + \"%\";\n    return (\n      <li key={index} style={{ width: width }}>\n        {String(index) + '. ' + textContent}\n      </li>\n    );\n  });\n\n  return <ol className={classes.rankingList}>{liTags}</ol>;\n}\n\nexport default Ranking;\n","import React from \"react\";\nimport useStyles from \"asset/style/style\";\n\nfunction InnnerGrid(props) {\n  const classes = useStyles();\n\n  const cellList = props.cells.map((element, index) => {\n    return (\n      <div key={index}>\n        <h4>{element.title}</h4>\n        <h5>{element.text}</h5>\n      </div>\n    );\n  });\n\n  return <div className={classes.innerGrid}>{cellList}</div>;\n}\n\nexport default InnnerGrid;\n","import React, { Fragment, useState } from \"react\";\nimport FileUpload from \"components/FileUpload.js\";\nimport KakaoContent from \"components/KakaoContent.js\";\nimport createChattingAnalyser from \"models/chatting_analyser.js\";\nimport Description from \"components/kakao_contents/Description\";\nimport BarChart from \"components/kakao_contents/BarChart\";\nimport Ranking from \"components/kakao_contents/Ranking\";\nimport InnnerGrid from \"components/kakao_contents/InnnerGrid\";\nimport useStyles from \"asset/style/style\";\n\n\n// TODO: Add Loading Effect, Refactor inefficient chattingAnalyser methods\nfunction KakaoAnalyser(props) {\n  const classes = useStyles();\n  const [contents, setContents] = useState([]);\n  //const [chattingAnalyser, setChattingAnalyser] = useState(undefined);\n  const [uploaded, setUploaded] = useState(true);\n\n  const createDescription = function (text) {\n    return <Description text={text}></Description>;\n  };\n\n  const createBarChart = function (data) {\n    return <BarChart data={data}></BarChart>;\n  };\n\n  const createRanking = function (data) {\n    return <Ranking data={data} />;\n  };\n\n  const createInnnerGrid = function (cells) {\n    return <InnnerGrid cells={cells}></InnnerGrid>;\n  };\n\n  const uploadEvent = function (e) {\n    const file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const fileContent = e.target.result;\n      setUploaded(false);\n      const chattingAnalyser = createChattingAnalyser(fileContent);\n      setContents([\n        { title: \"해쉬 코드\", items: [[createDescription, chattingAnalyser.getMd5Hash]] },\n        {\n          title: \"집계 기간\",\n          items: [\n            [\n              createDescription,\n              () => {\n                const beginDate = chattingAnalyser.calcBeginDate();\n                const endDate = chattingAnalyser.calcEndDate();\n\n                const convertDate = function (date) {\n                  const year = String(date.getFullYear()) + \"년\";\n                  const month = String(date.getMonth() + 1) + \"월\";\n                  const day = String(date.getDate()) + \"일\";\n\n                  return year + \" \" + month + \" \" + day;\n                };\n\n                return convertDate(beginDate) + \" ~ \" + convertDate(endDate);\n              },\n            ],\n          ],\n        },\n        {\n          title: \"채팅 수 & 하루 평균 채팅 수\",\n          items: [\n            [\n              createInnnerGrid,\n              () => {\n                const beginDate = chattingAnalyser.calcBeginDate();\n                const endDate = chattingAnalyser.calcEndDate();\n                const numOfLines = chattingAnalyser.calcNumOfLines();\n\n                const gapTime = endDate.getTime() - beginDate.getTime();\n                const gapDay = Math.floor(gapTime / (1000 * 60 * 60 * 24));\n\n                return [\n                  { title: \"채팅 수\", text: String(numOfLines) },\n                  { title: \"하루 평균 채팅 수\", text: String(Math.floor(numOfLines / gapDay)) },\n                ];\n              },\n            ],\n          ],\n        },\n        {\n          title: \"사진, 동영상, 이모티콘, 유튜브 링크 수\",\n          items: [\n            [\n              createInnnerGrid,\n              () => {\n                return [\n                  { title: \"사진\", text: chattingAnalyser.calcPhotoFrequency() },\n                  { title: \"동영상\", text: chattingAnalyser.calcVideoFrequency() },\n                  { title: \"이모티콘\", text: chattingAnalyser.calcEmojiFrequency() },\n                  { title: \"유튜브 링크 수\", text: chattingAnalyser.calcYoutubeFrequency() },\n                ];\n              },\n            ],\n          ],\n        },\n        {\n          title: \"채팅방에서 말을 가장 많이 한 사람\",\n          items: [\n            [createBarChart, chattingAnalyser.calcNameFrequency],\n            [createRanking, chattingAnalyser.calcNameFrequency],\n          ],\n        },\n        {\n          title: \"채팅방에서 타이핑한 글자수\",\n          items: [\n            [createBarChart, chattingAnalyser.calcTypingRanking],\n            [createRanking, chattingAnalyser.calcTypingRanking],\n          ],\n        },\n        {\n          title: \"가장 활발한 시간대\",\n          items: [\n            [createBarChart, chattingAnalyser.calcHourFrequency],\n            [createRanking, chattingAnalyser.calcHourFrequency],\n          ],\n        },\n        {\n          title: \"가장 활발한 요일\",\n          items: [\n            [createBarChart, chattingAnalyser.calcDayFrequency],\n            [createRanking, chattingAnalyser.calcDayFrequency],\n          ],\n        },\n      ]);\n    };\n    reader.readAsText(file);\n  };\n\n  const components = contents.map((element, index) => {\n    return <KakaoContent key={index} className={classes.contentBox} title={element.title} items={element.items}></KakaoContent>;\n  });\n\n  return (\n    <Fragment>\n      {uploaded ? \n      (<FileUpload uploadEvent={uploadEvent}></FileUpload>\n        ) : (\n      components)}\n    </Fragment>\n  );\n}\n\nexport default KakaoAnalyser;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport SpeakerNotesIcon from \"@material-ui/icons/SpeakerNotes\";\nimport { Link } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem button component={Link} to=\"/\">\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"홈\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/portfolio\">\n          <ListItemIcon>\n            <PortraitIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"개발 포트폴리오\" />\n        </ListItem>\n        <Divider />\n        <ListItem button component={Link} to=\"/kakao-analyser\">\n          <ListItemIcon>\n            <SpeakerNotesIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"카카오톡 분석기\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/character-maker\">\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"캐릭터 성격 생성기\" />\n        </ListItem>\n      </List>\n      \n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} id='menu-wrapper'><MenuIcon fontSize='large'/></Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import \"asset/style/menu.css\";\nimport \"asset/style/font.css\";\n//import \"asset/css/media.css\";\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Home, Portfolio, KakaoAnalyser, CharacterMaker } from \"pages\";\nimport Menu from \"components/Menu\";\nimport useStyles from \"asset/style/style\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction App() {\n  const classes = useStyles();\n\n  /*eslint-disable */\n  return (\n      <Paper elevation={3} className={classes.Container}>\n      <Menu></Menu>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/portfolio\" component={Portfolio} />\n        <Route path=\"/kakao-analyser\" component={KakaoAnalyser} />\n        <Route path=\"/character-maker\" component={CharacterMaker} />\n        <footer>\n          <p>\n            Made by&nbsp;\n            <a href=\"https://bustermachinelab.net/\" className={classes.link} target=\"_blank\" rel=\"author\">\n              BK927\n            </a>\n          </p>\n        </footer>\n      </Paper>\n  );\n}\n\nexport default App;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport App from \"App\";\n\n//TODO: Add responsive style\nfunction Root() {\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        light: \"#ff7961\",\n        main: \"#f44336\",\n        dark: \"#ba000d\",\n      },\n      secondary: {\n        light: \"#8561c5\",\n        main: \"#673ab7\",\n        dark: \"#482880\",\n      },\n      background: {\n        paper: \"#1F1F1F\",\n        default: \"#121212\",\n        dp01: \"#1F1F1F\",\n        dp02: \"#2C2C2C\",\n        dp03: \"#383838\",\n        dp04: \"#454545\",\n        dp05: \"#525252\",\n        dp06: \"#5F5F5F\",\n        dp07: \"#6B6B6B\",\n        dp08: \"#B3B3B3\",\n      },\n      text: {\n        highEmphasis: \"#F2F2F2\",\n        midiumEmphasis: \"#E6E6E6\",\n      },\n    },\n    typography: {\n      fontFamily: \"Noto Sans KR, Roboto, sans-serif\",\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          html: {\n            WebkitFontSmoothing: \"auto\",\n            display: \"grid\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            margin: \"0\",\n          },\n          body: {\n            display: \"grid\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            margin: \"0\",\n          },\n          footer: {\n            display: \"block\",\n            textAlign: \"center\",\n            fontSize: \"1.4rem\",\n            fontWeight: \"500\",\n          },\n        },\n      },\n    },\n  });\n\n  return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter basename=\"/\">\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n  );\n}\n\nexport default Root;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'Root'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}